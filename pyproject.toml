[project]
name = "pfun-cma-model"
urls = { homepage = "https://github.com/rocapp/pfun-cma-model" }
version = "0.3.2a7"
description = "A Python package for the Physiofunctional CMA model, a generative model that functionally replicates neuroendocrine dynamics."
authors = [{name = "Robbie Capps", email = "rocapp@gmail.com"}]
readme = "README.md"
dynamic = ["dependencies", "requires-python"]

[tool.poetry]
packages = [{include = "pfun_cma_model"}]
include = [
    {path = "scripts"},
    {path = "pfun_cma_model/bindist/pfun-common-0.0.0-alpha.tar.gz", format = "sdist"},
    {path = "pfun_cma_model/bindist/pfun-data-0.0.0-alpha.tar.gz", format = "sdist"},
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
setuptools = "68.2.2"
uvicorn = "0.32.0"
numba = "^0.58.0"
pandas = "^2.1.1"
scipy = "^1.11.3"
matplotlib = "^3.8.0"
pydantic = "2.4.2"
click = "^8.1.7"
paramiko = "^3.3.1"
pfun_path_helper = ">=0.1.0"
boto3 = "^1.28.57"
botocore = "^1.31.57"
jinja2 = "^3.1.2"
fastapi = "^0.115.3"
gunicorn = "^21.2.0"
PyYAML = "^6.0.1"
plotly = "^5.18.0"
graphql-core = "^3.2.3"
scikit-learn = "^1.3.2"
pfun-common = {file="./pfun_cma_model/bindist/pfun-common-0.0.0-alpha.tar.gz"}
pfun-data = {file="./pfun_cma_model/bindist/pfun-data-0.0.0-alpha.tar.gz"}
tabulate = "^0.9.0"

[tool.poetry.group.ui.dependencies]
dash = "^2.18.2"

[tool.poetry.group.dev.dependencies]
click = "^8.1.7"
pytest = "^6.0"
ipykernel = "^6.25.2"
ipython = "^8.16.1"
zappa = "^0.58.0"
tox-poetry-installer = "^0.10.3"
notebook = "^7.4.3"

[project.scripts]
##
# Scripts configuration:
##
pfun-cma-model = "pfun_cma_model.cli:cli"

[build-system]
##
# Build system configuration:
##
requires = ["poetry-core","wheel", "setuptools"]
build-backend = "poetry.core.masonry.api"

[tool.tox]
##
# Tox configuration:
##
requires = ["tox>=4.19", "tox-poetry-installer>=0.10.3"]
env_list = ["3.11", "type"]
isolated_build = true

[tool.tox.env_run_base]
description = "Run test under poetry"
package = "poetry"
install_dev_deps = true
commands = [ ["pytest", ], ]

[tool.tox.env.type]
description = "run type check on code base"
deps = ["mypy==1.11.2", "types-cachetools>=5.5.0.20240820", "types-chardet>=5.0.4.6"]
commands = [["mypy", "--strict", "--ignore-missing-imports", "pfun_cma_model"]]


