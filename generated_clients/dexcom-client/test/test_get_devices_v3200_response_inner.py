# coding: utf-8

"""
    Dexcom Developer API

    This API provides access to Dexcom continuous glucose monitoring data for authorized users.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_devices_v3200_response_inner import GetDevicesV3200ResponseInner

class TestGetDevicesV3200ResponseInner(unittest.TestCase):
    """GetDevicesV3200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetDevicesV3200ResponseInner:
        """Test GetDevicesV3200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetDevicesV3200ResponseInner`
        """
        model = GetDevicesV3200ResponseInner()
        if include_optional:
            return GetDevicesV3200ResponseInner(
                device_id = '',
                device_type = '',
                transmitter_generation = None,
                transmitter_id = None,
                display_device = None,
                activation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deactivation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return GetDevicesV3200ResponseInner(
        )
        """

    def testGetDevicesV3200ResponseInner(self):
        """Test GetDevicesV3200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
