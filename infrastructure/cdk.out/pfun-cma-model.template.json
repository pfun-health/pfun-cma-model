{
 "Transform": "AWS::Serverless-2016-10-31",
 "AWSTemplateFormatVersion": "2010-09-09",
 "Resources": {
  "ManagedLayer": {
   "Type": "AWS::Serverless::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.10"
    ],
    "ContentUri": {
     "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
     "Key": "0cd9b2ab28271b48194ab41add1d9853a2d3d8d7590c8c78b76ae4974d97241a.zip"
    },
    "LayerName": "pfun-cma-model-pfun-cma-model-managed-layer"
   }
  },
  "RunModel": {
   "Type": "AWS::Serverless::Function",
   "Properties": {
    "CodeUri": {
     "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
     "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
    },
    "Handler": "app.run_model_with_config",
    "Layers": [
     {
      "Ref": "ManagedLayer"
     },
     "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
    ],
    "MemorySize": 128,
    "Runtime": "python3.10",
    "Tags": {
     "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
    },
    "Timeout": 60,
    "Tracing": "PassThrough"
   }
  },
  "RunAtTime": {
   "Type": "AWS::Serverless::Function",
   "Properties": {
    "CodeUri": {
     "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
     "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
    },
    "Handler": "app.run_at_time",
    "Layers": [
     {
      "Ref": "ManagedLayer"
     },
     "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
    ],
    "MemorySize": 128,
    "Runtime": "python3.10",
    "Tags": {
     "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
    },
    "Timeout": 60,
    "Tracing": "PassThrough"
   }
  },
  "FitModel": {
   "Type": "AWS::Serverless::Function",
   "Properties": {
    "CodeUri": {
     "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
     "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
    },
    "Handler": "app.fit_model_to_data",
    "Layers": [
     {
      "Ref": "ManagedLayer"
     },
     "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
    ],
    "MemorySize": 128,
    "Runtime": "python3.10",
    "Tags": {
     "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
    },
    "Timeout": 60,
    "Tracing": "PassThrough"
   }
  },
  "Oauth2Dexcom": {
   "Type": "AWS::Serverless::Function",
   "Properties": {
    "CodeUri": {
     "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
     "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
    },
    "Handler": "app.oauth2_dexcom",
    "Layers": [
     {
      "Ref": "ManagedLayer"
     },
     "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
    ],
    "MemorySize": 128,
    "Runtime": "python3.10",
    "Tags": {
     "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
    },
    "Timeout": 60,
    "Tracing": "PassThrough"
   }
  },
  "FakeAuth": {
   "Type": "AWS::Serverless::Function",
   "Properties": {
    "CodeUri": {
     "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
     "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
    },
    "Handler": "app.fake_auth",
    "Layers": [
     {
      "Ref": "ManagedLayer"
     },
     "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
    ],
    "MemorySize": 128,
    "Runtime": "python3.10",
    "Tags": {
     "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
    },
    "Timeout": 60,
    "Tracing": "PassThrough"
   }
  },
  "APIHandler": {
   "Type": "AWS::Serverless::Function",
   "Properties": {
    "CodeUri": {
     "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
     "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
    },
    "Handler": "app.app",
    "Layers": [
     {
      "Ref": "ManagedLayer"
     },
     "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
    ],
    "MemorySize": 128,
    "Runtime": "python3.10",
    "Tags": {
     "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
    },
    "Timeout": 60,
    "Tracing": "PassThrough"
   }
  },
  "RestAPI": {
   "Type": "AWS::Serverless::Api",
   "Properties": {
    "DefinitionBody": {
     "swagger": "2.0",
     "info": {
      "version": "1.0",
      "title": "PFun CMA Model Backend"
     },
     "schemes": [
      "https"
     ],
     "paths": {
      "/sdk": {
       "get": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        },
        "security": [
         {
          "fake_auth": []
         }
        ]
       },
       "options": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          },
          "headers": {
           "Access-Control-Allow-Methods": {
            "type": "string"
           },
           "Access-Control-Allow-Origin": {
            "type": "string"
           },
           "Access-Control-Allow-Headers": {
            "type": "string"
           },
           "Access-Control-Expose-Headers": {
            "type": "string"
           },
           "Access-Control-Max-Age": {
            "type": "string"
           },
           "Access-Control-Allow-Credentials": {
            "type": "string"
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
            "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
            "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
            "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
            "method.response.header.Access-Control-Max-Age": "'300'",
            "method.response.header.Access-Control-Allow-Credentials": "'true'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock",
         "contentHandling": "CONVERT_TO_TEXT"
        }
       }
      },
      "/": {
       "get": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        }
       },
       "options": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          },
          "headers": {
           "Access-Control-Allow-Methods": {
            "type": "string"
           },
           "Access-Control-Allow-Origin": {
            "type": "string"
           },
           "Access-Control-Allow-Headers": {
            "type": "string"
           },
           "Access-Control-Expose-Headers": {
            "type": "string"
           },
           "Access-Control-Max-Age": {
            "type": "string"
           },
           "Access-Control-Allow-Credentials": {
            "type": "string"
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
            "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
            "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
            "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
            "method.response.header.Access-Control-Max-Age": "'300'",
            "method.response.header.Access-Control-Allow-Credentials": "'true'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock",
         "contentHandling": "CONVERT_TO_TEXT"
        }
       }
      },
      "/routes": {
       "get": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        }
       },
       "options": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          },
          "headers": {
           "Access-Control-Allow-Methods": {
            "type": "string"
           },
           "Access-Control-Allow-Origin": {
            "type": "string"
           },
           "Access-Control-Allow-Headers": {
            "type": "string"
           },
           "Access-Control-Expose-Headers": {
            "type": "string"
           },
           "Access-Control-Max-Age": {
            "type": "string"
           },
           "Access-Control-Allow-Credentials": {
            "type": "string"
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
            "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
            "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
            "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
            "method.response.header.Access-Control-Max-Age": "'300'",
            "method.response.header.Access-Control-Allow-Credentials": "'true'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock",
         "contentHandling": "CONVERT_TO_TEXT"
        }
       }
      },
      "/log": {
       "get": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        },
        "security": [
         {
          "fake_auth": []
         }
        ]
       },
       "post": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        },
        "security": [
         {
          "fake_auth": []
         }
        ]
       },
       "options": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          },
          "headers": {
           "Access-Control-Allow-Methods": {
            "type": "string"
           },
           "Access-Control-Allow-Origin": {
            "type": "string"
           },
           "Access-Control-Allow-Headers": {
            "type": "string"
           },
           "Access-Control-Expose-Headers": {
            "type": "string"
           },
           "Access-Control-Max-Age": {
            "type": "string"
           },
           "Access-Control-Allow-Credentials": {
            "type": "string"
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
            "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
            "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
            "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
            "method.response.header.Access-Control-Max-Age": "'300'",
            "method.response.header.Access-Control-Allow-Credentials": "'true'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock",
         "contentHandling": "CONVERT_TO_TEXT"
        }
       }
      },
      "/run": {
       "get": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        },
        "summary": "A function that returns a message containing the welcome message and the",
        "description": "routes of the PFun CMA Model API.",
        "security": [
         {
          "fake_auth": []
         }
        ]
       },
       "post": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        },
        "summary": "A function that returns a message containing the welcome message and the",
        "description": "routes of the PFun CMA Model API.",
        "security": [
         {
          "fake_auth": []
         }
        ]
       },
       "options": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          },
          "headers": {
           "Access-Control-Allow-Methods": {
            "type": "string"
           },
           "Access-Control-Allow-Origin": {
            "type": "string"
           },
           "Access-Control-Allow-Headers": {
            "type": "string"
           },
           "Access-Control-Expose-Headers": {
            "type": "string"
           },
           "Access-Control-Max-Age": {
            "type": "string"
           },
           "Access-Control-Allow-Credentials": {
            "type": "string"
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
            "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
            "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
            "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
            "method.response.header.Access-Control-Max-Age": "'300'",
            "method.response.header.Access-Control-Allow-Credentials": "'true'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock",
         "contentHandling": "CONVERT_TO_TEXT"
        }
       }
      },
      "/fit": {
       "post": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        },
        "security": [
         {
          "fake_auth": []
         }
        ]
       },
       "options": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          },
          "headers": {
           "Access-Control-Allow-Methods": {
            "type": "string"
           },
           "Access-Control-Allow-Origin": {
            "type": "string"
           },
           "Access-Control-Allow-Headers": {
            "type": "string"
           },
           "Access-Control-Expose-Headers": {
            "type": "string"
           },
           "Access-Control-Max-Age": {
            "type": "string"
           },
           "Access-Control-Allow-Credentials": {
            "type": "string"
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
            "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
            "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
            "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
            "method.response.header.Access-Control-Max-Age": "'300'",
            "method.response.header.Access-Control-Allow-Credentials": "'true'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock",
         "contentHandling": "CONVERT_TO_TEXT"
        }
       }
      },
      "/login-success": {
       "get": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        }
       },
       "options": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          },
          "headers": {
           "Access-Control-Allow-Methods": {
            "type": "string"
           },
           "Access-Control-Allow-Origin": {
            "type": "string"
           },
           "Access-Control-Allow-Headers": {
            "type": "string"
           },
           "Access-Control-Expose-Headers": {
            "type": "string"
           },
           "Access-Control-Max-Age": {
            "type": "string"
           },
           "Access-Control-Allow-Credentials": {
            "type": "string"
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
            "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
            "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
            "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
            "method.response.header.Access-Control-Max-Age": "'300'",
            "method.response.header.Access-Control-Allow-Credentials": "'true'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock",
         "contentHandling": "CONVERT_TO_TEXT"
        }
       }
      },
      "/login-dexcom": {
       "get": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        }
       },
       "options": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          },
          "headers": {
           "Access-Control-Allow-Methods": {
            "type": "string"
           },
           "Access-Control-Allow-Origin": {
            "type": "string"
           },
           "Access-Control-Allow-Headers": {
            "type": "string"
           },
           "Access-Control-Expose-Headers": {
            "type": "string"
           },
           "Access-Control-Max-Age": {
            "type": "string"
           },
           "Access-Control-Allow-Credentials": {
            "type": "string"
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
            "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
            "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
            "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
            "method.response.header.Access-Control-Max-Age": "'300'",
            "method.response.header.Access-Control-Allow-Credentials": "'true'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock",
         "contentHandling": "CONVERT_TO_TEXT"
        }
       }
      }
     },
     "definitions": {
      "Empty": {
       "type": "object",
       "title": "Empty Schema"
      }
     },
     "x-amazon-apigateway-binary-media-types": [
      "application/octet-stream",
      "application/x-tar",
      "application/zip",
      "audio/basic",
      "audio/ogg",
      "audio/mp4",
      "audio/mpeg",
      "audio/wav",
      "audio/webm",
      "image/png",
      "image/jpg",
      "image/jpeg",
      "image/gif",
      "video/ogg",
      "video/mpeg",
      "video/webm"
     ],
     "securityDefinitions": {
      "fake_auth": {
       "in": "header",
       "type": "apiKey",
       "name": "Authorization",
       "x-amazon-apigateway-authtype": "custom",
       "x-amazon-apigateway-authorizer": {
        "type": "token",
        "authorizerUri": {
         "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FakeAuth.Arn}/invocations"
        }
       }
      }
     }
    },
    "EndpointConfiguration": "EDGE",
    "StageName": "api"
   }
  },
  "APIHandlerInvokePermission": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Ref": "APIHandler"
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Sub": [
      "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*",
      {
       "RestAPIId": {
        "Ref": "RestAPI"
       }
      }
     ]
    }
   }
  },
  "FakeAuthInvokePermission": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "FakeAuth",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Sub": [
      "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*",
      {
       "RestAPIId": {
        "Ref": "RestAPI"
       }
      }
     ]
    }
   }
  },
  "WebsocketConnect": {
   "Type": "AWS::Serverless::Function",
   "Properties": {
    "CodeUri": {
     "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
     "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
    },
    "Handler": "app.run_at_time_connect",
    "Layers": [
     {
      "Ref": "ManagedLayer"
     },
     "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
    ],
    "MemorySize": 128,
    "Runtime": "python3.10",
    "Tags": {
     "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
    },
    "Timeout": 60,
    "Tracing": "PassThrough"
   }
  },
  "WebsocketMessage": {
   "Type": "AWS::Serverless::Function",
   "Properties": {
    "CodeUri": {
     "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
     "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
    },
    "Handler": "app.run_at_time_route",
    "Layers": [
     {
      "Ref": "ManagedLayer"
     },
     "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
    ],
    "MemorySize": 128,
    "Runtime": "python3.10",
    "Tags": {
     "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
    },
    "Timeout": 60,
    "Tracing": "PassThrough"
   }
  },
  "WebsocketAPI": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "pfun-cma-model-pfun-cma-model-websocket-api",
    "ProtocolType": "WEBSOCKET",
    "RouteSelectionExpression": "$request.body.action"
   }
  },
  "WebsocketConnectAPIIntegration": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "WebsocketAPI"
    },
    "ConnectionType": "INTERNET",
    "ContentHandlingStrategy": "CONVERT_TO_TEXT",
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Sub": [
      "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${WebsocketHandler}/invocations",
      {
       "WebsocketHandler": {
        "Ref": "WebsocketConnect"
       }
      }
     ]
    }
   }
  },
  "WebsocketConnectInvokePermission": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Ref": "WebsocketConnect"
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Sub": [
      "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketAPIId}/*",
      {
       "WebsocketAPIId": {
        "Ref": "WebsocketAPI"
       }
      }
     ]
    }
   }
  },
  "WebsocketMessageAPIIntegration": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "WebsocketAPI"
    },
    "ConnectionType": "INTERNET",
    "ContentHandlingStrategy": "CONVERT_TO_TEXT",
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Sub": [
      "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${WebsocketHandler}/invocations",
      {
       "WebsocketHandler": {
        "Ref": "WebsocketMessage"
       }
      }
     ]
    }
   }
  },
  "WebsocketMessageInvokePermission": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Ref": "WebsocketMessage"
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Sub": [
      "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketAPIId}/*",
      {
       "WebsocketAPIId": {
        "Ref": "WebsocketAPI"
       }
      }
     ]
    }
   }
  },
  "WebsocketConnectRoute": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "WebsocketAPI"
    },
    "RouteKey": "$connect",
    "Target": {
     "Fn::Join": [
      "/",
      [
       "integrations",
       {
        "Ref": "WebsocketConnectAPIIntegration"
       }
      ]
     ]
    }
   }
  },
  "WebsocketMessageRoute": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "WebsocketAPI"
    },
    "RouteKey": "$default",
    "Target": {
     "Fn::Join": [
      "/",
      [
       "integrations",
       {
        "Ref": "WebsocketMessageAPIIntegration"
       }
      ]
     ]
    }
   }
  },
  "WebsocketAPIDeployment": {
   "Type": "AWS::ApiGatewayV2::Deployment",
   "Properties": {
    "ApiId": {
     "Ref": "WebsocketAPI"
    }
   },
   "DependsOn": [
    "WebsocketConnectRoute",
    "WebsocketMessageRoute"
   ]
  },
  "WebsocketAPIStage": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "WebsocketAPI"
    },
    "DeploymentId": {
     "Ref": "WebsocketAPIDeployment"
    },
    "StageName": "api"
   }
  },
  "PFunCMAModelLaunchConfiguration": {
   "Type": "AWS::AutoScaling::LaunchConfiguration",
   "Properties": {
    "ImageId": "ami-02675d30b814d1daa",
    "InstanceType": "m5.large"
   },
   "Metadata": {
    "aws:cdk:path": "pfun-cma-model/PFunCMAModelLaunchConfiguration"
   }
  },
  "PFunCMAModelScalingGroup": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "AvailabilityZones": [
     "us-east-1a",
     "us-east-1b",
     "us-east-1c"
    ],
    "DesiredCapacity": "5",
    "LaunchConfigurationName": {
     "Ref": "PFunCMAModelLaunchConfiguration"
    },
    "MaxSize": "10",
    "MinSize": "1"
   },
   "Metadata": {
    "aws:cdk:path": "pfun-cma-model/PFunCMAModelScalingGroup"
   }
  },
  "PFunCMAModelRole4C9342EE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pfun-cma-model/PFunCMAModelRole/Resource"
   }
  },
  "PFunCMAModelRoleDefaultPolicy0E341EE9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "apigateway:POST",
        "lambda:CreateFunction",
        "lambda:CreateAlias",
        "iam:AttachRolePolicy"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:apigateway:*::/*",
        "arn:aws:lambda:*:*:function:*",
        "arn:aws:iam::*:role/pfun-cma-model-dev",
        "arn:aws:sts::860311922912:assumed-role/pfun-cma-model-*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PFunCMAModelRoleDefaultPolicy0E341EE9",
    "Roles": [
     {
      "Ref": "PFunCMAModelRole4C9342EE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pfun-cma-model/PFunCMAModelRole/DefaultPolicy/Resource"
   }
  },
  "PFunSTSLazyRoleE0C010DC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "sts.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pfun-cma-model/PFunSTSLazyRole/Default/Resource"
   }
  },
  "PFunSTSLazyRoleDefaultPolicy6F2AE979": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sts:AssumeRole",
        "iam:AttachRolePolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PFunSTSLazyRoleDefaultPolicy6F2AE979",
    "Roles": [
     {
      "Ref": "PFunSTSLazyRoleE0C010DC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pfun-cma-model/PFunSTSLazyRole/Default/DefaultPolicy/Resource"
   }
  },
  "PFunIAMRole1DC387DA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "iam.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "iam:AttachRolePolicy",
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "PFunIAMLazyPolicy"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pfun-cma-model/PFunIAMRole/Default/Resource"
   }
  },
  "PFunCMAModelDevLambdaRoleF1F69BB2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pfun-cma-model/PFunCMAModelDevLambdaRole/Resource"
   }
  },
  "PFunCMAModelDevLambdaRoleDefaultPolicyD48781AE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sts:AssumeRole",
        "iam:AttachRolePolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PFunCMAModelDevLambdaRoleDefaultPolicyD48781AE",
    "Roles": [
     {
      "Ref": "PFunCMAModelDevLambdaRoleF1F69BB2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pfun-cma-model/PFunCMAModelDevLambdaRole/DefaultPolicy/Resource"
   }
  },
  "PFunCMAModelAPIHandlerPolicy469B3EE0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "apigateway:POST",
        "lambda:CreateFunction",
        "lambda:CreateAlias",
        "iam:AttachRolePolicy"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:apigateway:*::/*",
        "arn:aws:lambda:*:*:function:*",
        "arn:aws:iam::*:role/pfun-cma-model-dev"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PFunCMAModelAPIHandlerPolicy469B3EE0",
    "Roles": [
     {
      "Ref": "PFunIAMRole1DC387DA"
     },
     {
      "Ref": "PFunIAMRole1DC387DA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pfun-cma-model/PFunCMAModel-APIHandler-Policy/Resource"
   }
  },
  "PFunCMAModelAPIHandlerPolicyRole": {
   "Type": "AWS::IAM::RolePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "apigateway:POST",
        "lambda:CreateFunction",
        "lambda:CreateAlias",
        "iam:AttachRolePolicy"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:apigateway:*::/*",
        "arn:aws:lambda:*:*:function:*",
        "arn:aws:iam::*:role/pfun-cma-model-dev"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PFunCMAModelAPIHandlerPolicy469B3EE0",
    "RoleName": {
     "Ref": "PFunIAMRole1DC387DA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pfun-cma-model/PFunCMAModel-APIHandler-Policy-Role"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Q0W7CMAz8Ft5DxugTj8A0NAlpqEh7RSY1xSNNqtgZ6lD/fUnbaXvynXW+u2SpV4VezODOc1Pd5pbO+nEUMDeVVqcHFydgRmG9zkNxoTfR3FA2wKgYGv3YXtweOgwfGJi8U4m/RmdkwuuWemWhOVegEz1gaIgHIbRUg+Aduq/lYJOk+eLNCdYBfg1KHwUzeMHW+q5BJ5mlkjX2CqJ4NmDJ1VOVlH3denehOv6ZrJPsOMp2wce2V5S7l97imJHmwVsyXaYT2sN3918xrvteDX+RCyQ7ZayP1cWHZgg7kTM2VqiHhwwwn79HaaOoEtnHYEbHCffq0MnVu6dCPy/0avbJRPMQnVCDuhznD7EeQ5umAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "pfun-cma-model/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "RestAPIId": {
   "Value": {
    "Ref": "RestAPI"
   }
  },
  "APIHandlerName": {
   "Value": {
    "Ref": "APIHandler"
   }
  },
  "APIHandlerArn": {
   "Value": {
    "Fn::GetAtt": [
     "APIHandler",
     "Arn"
    ]
   }
  },
  "EndpointURL": {
   "Value": {
    "Fn::Sub": "https://${RestAPI}.execute-api.${AWS::Region}.${AWS::URLSuffix}/api/"
   }
  },
  "WebsocketAPIId": {
   "Value": {
    "Ref": "WebsocketAPI"
   }
  },
  "WebsocketConnectHandlerArn": {
   "Value": {
    "Fn::GetAtt": [
     "WebsocketConnect",
     "Arn"
    ]
   }
  },
  "WebsocketConnectHandlerName": {
   "Value": {
    "Ref": "WebsocketConnect"
   }
  },
  "WebsocketMessageHandlerArn": {
   "Value": {
    "Fn::GetAtt": [
     "WebsocketMessage",
     "Arn"
    ]
   }
  },
  "WebsocketMessageHandlerName": {
   "Value": {
    "Ref": "WebsocketMessage"
   }
  },
  "WebsocketConnectEndpointURL": {
   "Value": {
    "Fn::Sub": "wss://${WebsocketAPI}.execute-api.${AWS::Region}.${AWS::URLSuffix}/api/"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}