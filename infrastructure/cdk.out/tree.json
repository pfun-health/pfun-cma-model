{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "PFunCMAModelChaliceApp": {
        "id": "PFunCMAModelChaliceApp",
        "path": "PFunCMAModelChaliceApp",
        "children": {
          "PFunCMAModelChaliceApp": {
            "id": "PFunCMAModelChaliceApp",
            "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp",
            "children": {
              "ChaliceAppCode": {
                "id": "ChaliceAppCode",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceAppCode",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceAppCode/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.93.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceAppCode/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.93.0"
                }
              },
              "ChaliceManagedLayer": {
                "id": "ChaliceManagedLayer",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceManagedLayer",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceManagedLayer/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.93.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceManagedLayer/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.93.0"
                }
              },
              "ChaliceApp": {
                "id": "ChaliceApp",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp",
                "children": {
                  "$Mappings": {
                    "id": "$Mappings",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Mappings",
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  },
                  "$Conditions": {
                    "id": "$Conditions",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Conditions",
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  },
                  "$Rules": {
                    "id": "$Rules",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Rules",
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  },
                  "ManagedLayer": {
                    "id": "ManagedLayer",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/ManagedLayer",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::LayerVersion",
                      "aws:cdk:cloudformation:props": {
                        "compatibleRuntimes": [
                          "python3.10"
                        ],
                        "contentUri": {
                          "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                          "key": "937ac23990892c4f13d19b27c881ca206e743357c724556fe16b427d9506f5d7.zip"
                        },
                        "layerName": "pfun-cma-model-PFunCMAModelChaliceApp-managed-layer"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sam.CfnLayerVersion",
                      "version": "2.93.0"
                    }
                  },
                  "InvokeLambdaByName": {
                    "id": "InvokeLambdaByName",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/InvokeLambdaByName",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                      "aws:cdk:cloudformation:props": {
                        "codeUri": {
                          "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                          "key": "9a2ed692fd2850458e5e6653f62655cf237987f18ebc515aef0a87597780be6d.zip"
                        },
                        "handler": "app.lambda_invoke",
                        "layers": [
                          {
                            "Ref": "ManagedLayer"
                          },
                          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                        ],
                        "memorySize": 128,
                        "runtime": "python3.10",
                        "tags": {
                          "aws-chalice": "version=1.29.0:stage=PFunCMAModelChaliceApp:app=pfun-cma-model"
                        },
                        "timeout": 60,
                        "tracing": "PassThrough"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                      "version": "2.93.0"
                    }
                  },
                  "RunModel": {
                    "id": "RunModel",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/RunModel",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                      "aws:cdk:cloudformation:props": {
                        "codeUri": {
                          "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                          "key": "9a2ed692fd2850458e5e6653f62655cf237987f18ebc515aef0a87597780be6d.zip"
                        },
                        "handler": "app.run_model_with_config",
                        "layers": [
                          {
                            "Ref": "ManagedLayer"
                          },
                          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                        ],
                        "memorySize": 128,
                        "runtime": "python3.10",
                        "tags": {
                          "aws-chalice": "version=1.29.0:stage=PFunCMAModelChaliceApp:app=pfun-cma-model"
                        },
                        "timeout": 60,
                        "tracing": "PassThrough"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                      "version": "2.93.0"
                    }
                  },
                  "RunAtTime": {
                    "id": "RunAtTime",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/RunAtTime",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                      "aws:cdk:cloudformation:props": {
                        "codeUri": {
                          "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                          "key": "9a2ed692fd2850458e5e6653f62655cf237987f18ebc515aef0a87597780be6d.zip"
                        },
                        "handler": "app.run_at_time",
                        "layers": [
                          {
                            "Ref": "ManagedLayer"
                          },
                          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                        ],
                        "memorySize": 128,
                        "runtime": "python3.10",
                        "tags": {
                          "aws-chalice": "version=1.29.0:stage=PFunCMAModelChaliceApp:app=pfun-cma-model"
                        },
                        "timeout": 60,
                        "tracing": "PassThrough"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                      "version": "2.93.0"
                    }
                  },
                  "FitModel": {
                    "id": "FitModel",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/FitModel",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                      "aws:cdk:cloudformation:props": {
                        "codeUri": {
                          "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                          "key": "9a2ed692fd2850458e5e6653f62655cf237987f18ebc515aef0a87597780be6d.zip"
                        },
                        "handler": "app.fit_model_to_data",
                        "layers": [
                          {
                            "Ref": "ManagedLayer"
                          },
                          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                        ],
                        "memorySize": 128,
                        "runtime": "python3.10",
                        "tags": {
                          "aws-chalice": "version=1.29.0:stage=PFunCMAModelChaliceApp:app=pfun-cma-model"
                        },
                        "timeout": 60,
                        "tracing": "PassThrough"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                      "version": "2.93.0"
                    }
                  },
                  "Oauth2Dexcom": {
                    "id": "Oauth2Dexcom",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/Oauth2Dexcom",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                      "aws:cdk:cloudformation:props": {
                        "codeUri": {
                          "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                          "key": "9a2ed692fd2850458e5e6653f62655cf237987f18ebc515aef0a87597780be6d.zip"
                        },
                        "handler": "app.oauth2_dexcom",
                        "layers": [
                          {
                            "Ref": "ManagedLayer"
                          },
                          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                        ],
                        "memorySize": 128,
                        "runtime": "python3.10",
                        "tags": {
                          "aws-chalice": "version=1.29.0:stage=PFunCMAModelChaliceApp:app=pfun-cma-model"
                        },
                        "timeout": 60,
                        "tracing": "PassThrough"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                      "version": "2.93.0"
                    }
                  },
                  "FakeAuth": {
                    "id": "FakeAuth",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/FakeAuth",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                      "aws:cdk:cloudformation:props": {
                        "codeUri": {
                          "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                          "key": "9a2ed692fd2850458e5e6653f62655cf237987f18ebc515aef0a87597780be6d.zip"
                        },
                        "handler": "app.fake_auth",
                        "layers": [
                          {
                            "Ref": "ManagedLayer"
                          },
                          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                        ],
                        "memorySize": 128,
                        "runtime": "python3.10",
                        "tags": {
                          "aws-chalice": "version=1.29.0:stage=PFunCMAModelChaliceApp:app=pfun-cma-model"
                        },
                        "timeout": 60,
                        "tracing": "PassThrough"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                      "version": "2.93.0"
                    }
                  },
                  "APIHandler": {
                    "id": "APIHandler",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/APIHandler",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                      "aws:cdk:cloudformation:props": {
                        "codeUri": {
                          "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                          "key": "9a2ed692fd2850458e5e6653f62655cf237987f18ebc515aef0a87597780be6d.zip"
                        },
                        "handler": "app.app",
                        "layers": [
                          {
                            "Ref": "ManagedLayer"
                          },
                          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                        ],
                        "memorySize": 128,
                        "runtime": "python3.10",
                        "tags": {
                          "aws-chalice": "version=1.29.0:stage=PFunCMAModelChaliceApp:app=pfun-cma-model"
                        },
                        "timeout": 60,
                        "tracing": "PassThrough"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                      "version": "2.93.0"
                    }
                  },
                  "RestAPI": {
                    "id": "RestAPI",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/RestAPI",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::Api",
                      "aws:cdk:cloudformation:props": {
                        "definitionBody": {
                          "swagger": "2.0",
                          "info": {
                            "version": "1.0",
                            "title": "PFun CMA Model Backend"
                          },
                          "schemes": [
                            "https"
                          ],
                          "paths": {
                            "/sdk": {
                              "get": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "fake_auth": []
                                  }
                                ]
                              },
                              "options": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    },
                                    "headers": {
                                      "Access-Control-Allow-Methods": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Origin": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Expose-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Max-Age": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Credentials": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                                        "method.response.header.Access-Control-Allow-Headers": "'Access-Control-Allow-Origin,Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization,Access-Control-Allow-Origin'",
                                        "method.response.header.Access-Control-Max-Age": "'300'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      }
                                    }
                                  },
                                  "requestTemplates": {
                                    "application/json": "{\"statusCode\": 200}"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "type": "mock",
                                  "contentHandling": "CONVERT_TO_TEXT"
                                }
                              }
                            },
                            "/": {
                              "get": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "summary": "Generates the index page for the web application.",
                                "description": "Returns:\n    Response: The HTTP response object containing the index page."
                              },
                              "options": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    },
                                    "headers": {
                                      "Access-Control-Allow-Methods": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Origin": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Expose-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Max-Age": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Credentials": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                                        "method.response.header.Access-Control-Allow-Headers": "'Access-Control-Allow-Origin,Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization,Access-Control-Allow-Origin'",
                                        "method.response.header.Access-Control-Max-Age": "'300'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      }
                                    }
                                  },
                                  "requestTemplates": {
                                    "application/json": "{\"statusCode\": 200}"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "type": "mock",
                                  "contentHandling": "CONVERT_TO_TEXT"
                                }
                              }
                            },
                            "/routes": {
                              "get": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                }
                              },
                              "options": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    },
                                    "headers": {
                                      "Access-Control-Allow-Methods": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Origin": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Expose-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Max-Age": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Credentials": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                                        "method.response.header.Access-Control-Allow-Headers": "'Access-Control-Allow-Origin,Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization,Access-Control-Allow-Origin'",
                                        "method.response.header.Access-Control-Max-Age": "'300'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      }
                                    }
                                  },
                                  "requestTemplates": {
                                    "application/json": "{\"statusCode\": 200}"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "type": "mock",
                                  "contentHandling": "CONVERT_TO_TEXT"
                                }
                              }
                            },
                            "/log": {
                              "get": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "fake_auth": []
                                  }
                                ]
                              },
                              "post": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "fake_auth": []
                                  }
                                ]
                              },
                              "options": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    },
                                    "headers": {
                                      "Access-Control-Allow-Methods": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Origin": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Expose-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Max-Age": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Credentials": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                                        "method.response.header.Access-Control-Allow-Headers": "'Access-Control-Allow-Origin,Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization,Access-Control-Allow-Origin'",
                                        "method.response.header.Access-Control-Max-Age": "'300'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      }
                                    }
                                  },
                                  "requestTemplates": {
                                    "application/json": "{\"statusCode\": 200}"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "type": "mock",
                                  "contentHandling": "CONVERT_TO_TEXT"
                                }
                              }
                            },
                            "/run": {
                              "get": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "summary": "A function that returns a message containing the welcome message and the",
                                "description": "routes of the PFun CMA Model API.",
                                "security": [
                                  {
                                    "fake_auth": []
                                  }
                                ]
                              },
                              "post": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "summary": "A function that returns a message containing the welcome message and the",
                                "description": "routes of the PFun CMA Model API.",
                                "security": [
                                  {
                                    "fake_auth": []
                                  }
                                ]
                              },
                              "options": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    },
                                    "headers": {
                                      "Access-Control-Allow-Methods": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Origin": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Expose-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Max-Age": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Credentials": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                                        "method.response.header.Access-Control-Allow-Headers": "'Access-Control-Allow-Origin,Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization,Access-Control-Allow-Origin'",
                                        "method.response.header.Access-Control-Max-Age": "'300'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      }
                                    }
                                  },
                                  "requestTemplates": {
                                    "application/json": "{\"statusCode\": 200}"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "type": "mock",
                                  "contentHandling": "CONVERT_TO_TEXT"
                                }
                              }
                            },
                            "/run-at-time": {
                              "get": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "fake_auth": []
                                  }
                                ]
                              },
                              "post": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "fake_auth": []
                                  }
                                ]
                              },
                              "options": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    },
                                    "headers": {
                                      "Access-Control-Allow-Methods": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Origin": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Expose-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Max-Age": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Credentials": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                                        "method.response.header.Access-Control-Allow-Headers": "'Access-Control-Allow-Origin,Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization,Access-Control-Allow-Origin'",
                                        "method.response.header.Access-Control-Max-Age": "'300'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      }
                                    }
                                  },
                                  "requestTemplates": {
                                    "application/json": "{\"statusCode\": 200}"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "type": "mock",
                                  "contentHandling": "CONVERT_TO_TEXT"
                                }
                              }
                            },
                            "/fit": {
                              "post": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "fake_auth": []
                                  }
                                ]
                              },
                              "options": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    },
                                    "headers": {
                                      "Access-Control-Allow-Methods": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Origin": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Expose-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Max-Age": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Credentials": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                                        "method.response.header.Access-Control-Allow-Headers": "'Access-Control-Allow-Origin,Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization,Access-Control-Allow-Origin'",
                                        "method.response.header.Access-Control-Max-Age": "'300'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      }
                                    }
                                  },
                                  "requestTemplates": {
                                    "application/json": "{\"statusCode\": 200}"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "type": "mock",
                                  "contentHandling": "CONVERT_TO_TEXT"
                                }
                              }
                            },
                            "/login-success": {
                              "get": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                }
                              },
                              "options": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    },
                                    "headers": {
                                      "Access-Control-Allow-Methods": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Origin": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Expose-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Max-Age": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Credentials": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                                        "method.response.header.Access-Control-Allow-Headers": "'Access-Control-Allow-Origin,Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization,Access-Control-Allow-Origin'",
                                        "method.response.header.Access-Control-Max-Age": "'300'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      }
                                    }
                                  },
                                  "requestTemplates": {
                                    "application/json": "{\"statusCode\": 200}"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "type": "mock",
                                  "contentHandling": "CONVERT_TO_TEXT"
                                }
                              }
                            },
                            "/login-dexcom": {
                              "get": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                }
                              },
                              "options": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    },
                                    "headers": {
                                      "Access-Control-Allow-Methods": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Origin": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Expose-Headers": {
                                        "type": "string"
                                      },
                                      "Access-Control-Max-Age": {
                                        "type": "string"
                                      },
                                      "Access-Control-Allow-Credentials": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                                        "method.response.header.Access-Control-Allow-Headers": "'Access-Control-Allow-Origin,Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization,Access-Control-Allow-Origin'",
                                        "method.response.header.Access-Control-Max-Age": "'300'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      }
                                    }
                                  },
                                  "requestTemplates": {
                                    "application/json": "{\"statusCode\": 200}"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "type": "mock",
                                  "contentHandling": "CONVERT_TO_TEXT"
                                }
                              }
                            }
                          },
                          "definitions": {
                            "Empty": {
                              "type": "object",
                              "title": "Empty Schema"
                            }
                          },
                          "x-amazon-apigateway-binary-media-types": [
                            "application/octet-stream",
                            "application/x-tar",
                            "application/zip",
                            "audio/basic",
                            "audio/ogg",
                            "audio/mp4",
                            "audio/mpeg",
                            "audio/wav",
                            "audio/webm",
                            "image/png",
                            "image/jpg",
                            "image/jpeg",
                            "image/gif",
                            "video/ogg",
                            "video/mpeg",
                            "video/webm"
                          ],
                          "securityDefinitions": {
                            "fake_auth": {
                              "in": "header",
                              "type": "apiKey",
                              "name": "Authorization",
                              "x-amazon-apigateway-authtype": "custom",
                              "x-amazon-apigateway-authorizer": {
                                "type": "token",
                                "authorizerUri": {
                                  "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FakeAuth.Arn}/invocations"
                                }
                              }
                            }
                          }
                        },
                        "endpointConfiguration": "EDGE",
                        "stageName": "api"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sam.CfnApi",
                      "version": "2.93.0"
                    }
                  },
                  "APIHandlerInvokePermission": {
                    "id": "APIHandlerInvokePermission",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/APIHandlerInvokePermission",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Ref": "APIHandler"
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": {
                          "Fn::Sub": [
                            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*",
                            {
                              "RestAPIId": {
                                "Ref": "RestAPI"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                      "version": "2.93.0"
                    }
                  },
                  "FakeAuthInvokePermission": {
                    "id": "FakeAuthInvokePermission",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/FakeAuthInvokePermission",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Fn::GetAtt": [
                            "FakeAuth",
                            "Arn"
                          ]
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": {
                          "Fn::Sub": [
                            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*",
                            {
                              "RestAPIId": {
                                "Ref": "RestAPI"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                      "version": "2.93.0"
                    }
                  },
                  "WebsocketConnect": {
                    "id": "WebsocketConnect",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketConnect",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                      "aws:cdk:cloudformation:props": {
                        "codeUri": {
                          "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                          "key": "9a2ed692fd2850458e5e6653f62655cf237987f18ebc515aef0a87597780be6d.zip"
                        },
                        "handler": "app.run_at_time_connect",
                        "layers": [
                          {
                            "Ref": "ManagedLayer"
                          },
                          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                        ],
                        "memorySize": 128,
                        "runtime": "python3.10",
                        "tags": {
                          "aws-chalice": "version=1.29.0:stage=PFunCMAModelChaliceApp:app=pfun-cma-model"
                        },
                        "timeout": 60,
                        "tracing": "PassThrough"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                      "version": "2.93.0"
                    }
                  },
                  "WebsocketMessage": {
                    "id": "WebsocketMessage",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketMessage",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                      "aws:cdk:cloudformation:props": {
                        "codeUri": {
                          "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                          "key": "9a2ed692fd2850458e5e6653f62655cf237987f18ebc515aef0a87597780be6d.zip"
                        },
                        "handler": "app.run_at_time_ws",
                        "layers": [
                          {
                            "Ref": "ManagedLayer"
                          },
                          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                        ],
                        "memorySize": 128,
                        "runtime": "python3.10",
                        "tags": {
                          "aws-chalice": "version=1.29.0:stage=PFunCMAModelChaliceApp:app=pfun-cma-model"
                        },
                        "timeout": 60,
                        "tracing": "PassThrough"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                      "version": "2.93.0"
                    }
                  },
                  "WebsocketAPI": {
                    "id": "WebsocketAPI",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketAPI",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Api",
                      "aws:cdk:cloudformation:props": {
                        "name": "pfun-cma-model-PFunCMAModelChaliceApp-websocket-api",
                        "protocolType": "WEBSOCKET",
                        "routeSelectionExpression": "$request.body.action"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnApi",
                      "version": "2.93.0"
                    }
                  },
                  "WebsocketConnectAPIIntegration": {
                    "id": "WebsocketConnectAPIIntegration",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketConnectAPIIntegration",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Integration",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Ref": "WebsocketAPI"
                        },
                        "connectionType": "INTERNET",
                        "contentHandlingStrategy": "CONVERT_TO_TEXT",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                          "Fn::Sub": [
                            "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${WebsocketHandler}/invocations",
                            {
                              "WebsocketHandler": {
                                "Ref": "WebsocketConnect"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnIntegration",
                      "version": "2.93.0"
                    }
                  },
                  "WebsocketConnectInvokePermission": {
                    "id": "WebsocketConnectInvokePermission",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketConnectInvokePermission",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Ref": "WebsocketConnect"
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": {
                          "Fn::Sub": [
                            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketAPIId}/*",
                            {
                              "WebsocketAPIId": {
                                "Ref": "WebsocketAPI"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                      "version": "2.93.0"
                    }
                  },
                  "WebsocketMessageAPIIntegration": {
                    "id": "WebsocketMessageAPIIntegration",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketMessageAPIIntegration",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Integration",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Ref": "WebsocketAPI"
                        },
                        "connectionType": "INTERNET",
                        "contentHandlingStrategy": "CONVERT_TO_TEXT",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                          "Fn::Sub": [
                            "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${WebsocketHandler}/invocations",
                            {
                              "WebsocketHandler": {
                                "Ref": "WebsocketMessage"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnIntegration",
                      "version": "2.93.0"
                    }
                  },
                  "WebsocketMessageInvokePermission": {
                    "id": "WebsocketMessageInvokePermission",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketMessageInvokePermission",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Ref": "WebsocketMessage"
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": {
                          "Fn::Sub": [
                            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketAPIId}/*",
                            {
                              "WebsocketAPIId": {
                                "Ref": "WebsocketAPI"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                      "version": "2.93.0"
                    }
                  },
                  "WebsocketConnectRoute": {
                    "id": "WebsocketConnectRoute",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketConnectRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Route",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Ref": "WebsocketAPI"
                        },
                        "routeKey": "$connect",
                        "target": {
                          "Fn::Join": [
                            "/",
                            [
                              "integrations",
                              {
                                "Ref": "WebsocketConnectAPIIntegration"
                              }
                            ]
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnRoute",
                      "version": "2.93.0"
                    }
                  },
                  "WebsocketMessageRoute": {
                    "id": "WebsocketMessageRoute",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketMessageRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Route",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Ref": "WebsocketAPI"
                        },
                        "routeKey": "$default",
                        "target": {
                          "Fn::Join": [
                            "/",
                            [
                              "integrations",
                              {
                                "Ref": "WebsocketMessageAPIIntegration"
                              }
                            ]
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnRoute",
                      "version": "2.93.0"
                    }
                  },
                  "WebsocketAPIDeployment": {
                    "id": "WebsocketAPIDeployment",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketAPIDeployment",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Ref": "WebsocketAPI"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnDeployment",
                      "version": "2.93.0"
                    }
                  },
                  "WebsocketAPIStage": {
                    "id": "WebsocketAPIStage",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketAPIStage",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Stage",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Ref": "WebsocketAPI"
                        },
                        "deploymentId": {
                          "Ref": "WebsocketAPIDeployment"
                        },
                        "stageName": "api"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnStage",
                      "version": "2.93.0"
                    }
                  },
                  "$Hooks": {
                    "id": "$Hooks",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Hooks",
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  },
                  "$Ouputs": {
                    "id": "$Ouputs",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs",
                    "children": {
                      "RestAPIId": {
                        "id": "RestAPIId",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/RestAPIId",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnOutput",
                          "version": "2.93.0"
                        }
                      },
                      "APIHandlerName": {
                        "id": "APIHandlerName",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/APIHandlerName",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnOutput",
                          "version": "2.93.0"
                        }
                      },
                      "APIHandlerArn": {
                        "id": "APIHandlerArn",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/APIHandlerArn",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnOutput",
                          "version": "2.93.0"
                        }
                      },
                      "EndpointURL": {
                        "id": "EndpointURL",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/EndpointURL",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnOutput",
                          "version": "2.93.0"
                        }
                      },
                      "WebsocketAPIId": {
                        "id": "WebsocketAPIId",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/WebsocketAPIId",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnOutput",
                          "version": "2.93.0"
                        }
                      },
                      "WebsocketConnectHandlerArn": {
                        "id": "WebsocketConnectHandlerArn",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/WebsocketConnectHandlerArn",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnOutput",
                          "version": "2.93.0"
                        }
                      },
                      "WebsocketConnectHandlerName": {
                        "id": "WebsocketConnectHandlerName",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/WebsocketConnectHandlerName",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnOutput",
                          "version": "2.93.0"
                        }
                      },
                      "WebsocketMessageHandlerArn": {
                        "id": "WebsocketMessageHandlerArn",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/WebsocketMessageHandlerArn",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnOutput",
                          "version": "2.93.0"
                        }
                      },
                      "WebsocketMessageHandlerName": {
                        "id": "WebsocketMessageHandlerName",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/WebsocketMessageHandlerName",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnOutput",
                          "version": "2.93.0"
                        }
                      },
                      "WebsocketConnectEndpointURL": {
                        "id": "WebsocketConnectEndpointURL",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/WebsocketConnectEndpointURL",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnOutput",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.cloudformation_include.CfnInclude",
                  "version": "2.93.0"
                }
              },
              "RunModel": {
                "id": "RunModel",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/RunModel",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                  "version": "2.93.0"
                }
              },
              "FitModel": {
                "id": "FitModel",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/FitModel",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                  "version": "2.93.0"
                }
              },
              "RunAtTime": {
                "id": "RunAtTime",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/RunAtTime",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                  "version": "2.93.0"
                }
              },
              "FakeAuth": {
                "id": "FakeAuth",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/FakeAuth",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                  "version": "2.93.0"
                }
              },
              "APIHandler": {
                "id": "APIHandler",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/APIHandler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                  "version": "2.93.0"
                }
              },
              "InvokeLambdaByName": {
                "id": "InvokeLambdaByName",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/InvokeLambdaByName",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                  "version": "2.93.0"
                }
              },
              "Oauth2Dexcom": {
                "id": "Oauth2Dexcom",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp/Oauth2Dexcom",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                  "version": "2.93.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.69"
            }
          },
          "PFunCMAModelVPC": {
            "id": "PFunCMAModelVPC",
            "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnVPC",
                  "version": "2.93.0"
                }
              },
              "privateSubnet1": {
                "id": "privateSubnet1",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": "us-east-1a",
                        "cidrBlock": "10.0.0.0/18",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "PFunCMAModelVPC45F492DB"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.93.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.93.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "PFunCMAModelVPC45F492DB"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.93.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "PFunCMAModelVPCprivateSubnet1RouteTable4F03F7C7"
                        },
                        "subnetId": {
                          "Ref": "PFunCMAModelVPCprivateSubnet1SubnetDE1059FB"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.93.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "PFunCMAModelVPCpublicSubnet1NATGatewayEE43DF7C"
                        },
                        "routeTableId": {
                          "Ref": "PFunCMAModelVPCprivateSubnet1RouteTable4F03F7C7"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "2.93.0"
                }
              },
              "privateSubnet2": {
                "id": "privateSubnet2",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": "us-east-1b",
                        "cidrBlock": "10.0.64.0/18",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "PFunCMAModelVPC45F492DB"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.93.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.93.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "PFunCMAModelVPC45F492DB"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.93.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "PFunCMAModelVPCprivateSubnet2RouteTable1C044654"
                        },
                        "subnetId": {
                          "Ref": "PFunCMAModelVPCprivateSubnet2SubnetD4B15059"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.93.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/privateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "PFunCMAModelVPCpublicSubnet2NATGatewayA5AA7F99"
                        },
                        "routeTableId": {
                          "Ref": "PFunCMAModelVPCprivateSubnet2RouteTable1C044654"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "2.93.0"
                }
              },
              "publicSubnet1": {
                "id": "publicSubnet1",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": "us-east-1a",
                        "cidrBlock": "10.0.128.0/18",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "PFunCMAModelVPC45F492DB"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.93.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.93.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "PFunCMAModelVPC45F492DB"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.93.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "PFunCMAModelVPCpublicSubnet1RouteTableA470CB3E"
                        },
                        "subnetId": {
                          "Ref": "PFunCMAModelVPCpublicSubnet1Subnet8C7FD47D"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.93.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "PFunCMAModelVPCIGW41DFF152"
                        },
                        "routeTableId": {
                          "Ref": "PFunCMAModelVPCpublicSubnet1RouteTableA470CB3E"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.93.0"
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnEIP",
                      "version": "2.93.0"
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "PFunCMAModelVPCpublicSubnet1EIP7E238277",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "PFunCMAModelVPCpublicSubnet1Subnet8C7FD47D"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnNatGateway",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                  "version": "2.93.0"
                }
              },
              "publicSubnet2": {
                "id": "publicSubnet2",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": "us-east-1b",
                        "cidrBlock": "10.0.192.0/18",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "PFunCMAModelVPC45F492DB"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.93.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.93.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "PFunCMAModelVPC45F492DB"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.93.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "PFunCMAModelVPCpublicSubnet2RouteTableA662863B"
                        },
                        "subnetId": {
                          "Ref": "PFunCMAModelVPCpublicSubnet2SubnetB6BCDE86"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.93.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "PFunCMAModelVPCIGW41DFF152"
                        },
                        "routeTableId": {
                          "Ref": "PFunCMAModelVPCpublicSubnet2RouteTableA662863B"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.93.0"
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnEIP",
                      "version": "2.93.0"
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "PFunCMAModelVPCpublicSubnet2EIPDBD8EB1A",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "PFunCMAModelVPCpublicSubnet2SubnetB6BCDE86"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC/publicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnNatGateway",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                  "version": "2.93.0"
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "PFunCMAModelChaliceApp/PFunCMAModelVPC"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnInternetGateway",
                  "version": "2.93.0"
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelVPC/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "internetGatewayId": {
                      "Ref": "PFunCMAModelVPCIGW41DFF152"
                    },
                    "vpcId": {
                      "Ref": "PFunCMAModelVPC45F492DB"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnVPCGatewayAttachment",
                  "version": "2.93.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.Vpc",
              "version": "2.93.0"
            }
          },
          "PFunCMAModelLoadBalancer": {
            "id": "PFunCMAModelLoadBalancer",
            "path": "PFunCMAModelChaliceApp/PFunCMAModelLoadBalancer",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelLoadBalancer/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                  "aws:cdk:cloudformation:props": {
                    "ipAddressType": "ipv4",
                    "loadBalancerAttributes": [
                      {
                        "key": "deletion_protection.enabled",
                        "value": "false"
                      }
                    ],
                    "scheme": "internal",
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "PFunCMAModelLoadBalancerSecurityGroupE55A7C00",
                          "GroupId"
                        ]
                      },
                      {
                        "Fn::GetAtt": [
                          "PFunAlbSecurityGroupDA3A5D19",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnets": [
                      {
                        "Ref": "PFunCMAModelVPCprivateSubnet1SubnetDE1059FB"
                      },
                      {
                        "Ref": "PFunCMAModelVPCprivateSubnet2SubnetD4B15059"
                      }
                    ],
                    "type": "application"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnLoadBalancer",
                  "version": "2.93.0"
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelLoadBalancer/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelLoadBalancer/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Automatically created Security Group for ELB PFunCMAModelChaliceAppPFunCMAModelLoadBalancerB4AEA142",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "255.255.255.255/32",
                            "description": "Disallow all traffic",
                            "ipProtocol": "icmp",
                            "fromPort": 252,
                            "toPort": 86
                          }
                        ],
                        "vpcId": {
                          "Ref": "PFunCMAModelVPC45F492DB"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                  "version": "2.93.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancer",
              "version": "2.93.0"
            }
          },
          "PFunAlbSecurityGroup": {
            "id": "PFunAlbSecurityGroup",
            "path": "PFunCMAModelChaliceApp/PFunAlbSecurityGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PFunCMAModelChaliceApp/PFunAlbSecurityGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "PFunCMAModelChaliceApp/PFunAlbSecurityGroup",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "vpcId": {
                      "Ref": "PFunCMAModelVPC45F492DB"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                  "version": "2.93.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
              "version": "2.93.0"
            }
          },
          "ManagedCustomPolicyLambdaInvokeAndListFunctions": {
            "id": "ManagedCustomPolicyLambdaInvokeAndListFunctions",
            "path": "PFunCMAModelChaliceApp/ManagedCustomPolicyLambdaInvokeAndListFunctions",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PFunCMAModelChaliceApp/ManagedCustomPolicyLambdaInvokeAndListFunctions/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                  "aws:cdk:cloudformation:props": {
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": [
                            "lambda:ListFunctions",
                            "lambda:InvokeFunction"
                          ],
                          "Effect": "Allow",
                          "Resource": "*"
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policyName": "ManagedCustomPolicyLambdaListFunctionsAndInvoke",
                    "roles": [
                      {
                        "Ref": "ManagedInstanceRolerole3BBF2FD5"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                  "version": "2.93.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Policy",
              "version": "2.93.0"
            }
          },
          "ManagedInstanceRole": {
            "id": "ManagedInstanceRole",
            "path": "PFunCMAModelChaliceApp/ManagedInstanceRole",
            "children": {
              "role": {
                "id": "role",
                "path": "PFunCMAModelChaliceApp/ManagedInstanceRole/role",
                "children": {
                  "Importrole": {
                    "id": "Importrole",
                    "path": "PFunCMAModelChaliceApp/ManagedInstanceRole/role/Importrole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.93.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "PFunCMAModelChaliceApp/ManagedInstanceRole/role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ec2.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonSSMDirectoryServiceAccess"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.93.0"
                }
              },
              "instanceProfile": {
                "id": "instanceProfile",
                "path": "PFunCMAModelChaliceApp/ManagedInstanceRole/instanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "ManagedInstanceRolerole3BBF2FD5"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnInstanceProfile",
                  "version": "2.93.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@renovosolutions/cdk-library-managed-instance-role.ManagedInstanceRole",
              "version": "2.3.111"
            }
          },
          "PFunCMAModelChaliceApp--PFunCMAModelChaliceApp--APIHandler": {
            "id": "PFunCMAModelChaliceApp--PFunCMAModelChaliceApp--APIHandler",
            "path": "PFunCMAModelChaliceApp/PFunCMAModelChaliceApp--PFunCMAModelChaliceApp--APIHandler",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
              "version": "2.93.0"
            }
          },
          "PFunCMAModelAPIGateway": {
            "id": "PFunCMAModelAPIGateway",
            "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "PFunCMAModelAPIGateway"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.93.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.93.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.93.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "PFunCMAModelAPIGatewayCloudWatchRoleC1C1D9B7",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.93.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "description": "Automatically created by the RestApi construct",
                        "restApiId": {
                          "Ref": "PFunCMAModelAPIGateway8F423C17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.93.0"
                }
              },
              "DeploymentStage.prod": {
                "id": "DeploymentStage.prod",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/DeploymentStage.prod",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/DeploymentStage.prod/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "deploymentId": {
                          "Ref": "PFunCMAModelAPIGatewayDeployment4E1DD87792f2fb7a6f44d29e5ae88507d00ed8e8"
                        },
                        "restApiId": {
                          "Ref": "PFunCMAModelAPIGateway8F423C17"
                        },
                        "stageName": "prod"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.93.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.93.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Default",
                "children": {
                  "{proxy+}": {
                    "id": "{proxy+}",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Default/{proxy+}",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Default/{proxy+}/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "PFunCMAModelAPIGateway8F423C17",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "{proxy+}",
                            "restApiId": {
                              "Ref": "PFunCMAModelAPIGateway8F423C17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.93.0"
                        }
                      },
                      "ANY": {
                        "id": "ANY",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Default/{proxy+}/ANY",
                        "children": {
                          "ApiPermission.PFunCMAModelChaliceAppPFunCMAModelAPIGateway6A14670E.ANY..{proxy+}": {
                            "id": "ApiPermission.PFunCMAModelChaliceAppPFunCMAModelAPIGateway6A14670E.ANY..{proxy+}",
                            "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Default/{proxy+}/ANY/ApiPermission.PFunCMAModelChaliceAppPFunCMAModelAPIGateway6A14670E.ANY..{proxy+}",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "APIHandler",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:860311922912:",
                                      {
                                        "Ref": "PFunCMAModelAPIGateway8F423C17"
                                      },
                                      "/",
                                      {
                                        "Ref": "PFunCMAModelAPIGatewayDeploymentStageprodF4B4E490"
                                      },
                                      "/*/*"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.93.0"
                            }
                          },
                          "ApiPermission.Test.PFunCMAModelChaliceAppPFunCMAModelAPIGateway6A14670E.ANY..{proxy+}": {
                            "id": "ApiPermission.Test.PFunCMAModelChaliceAppPFunCMAModelAPIGateway6A14670E.ANY..{proxy+}",
                            "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Default/{proxy+}/ANY/ApiPermission.Test.PFunCMAModelChaliceAppPFunCMAModelAPIGateway6A14670E.ANY..{proxy+}",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "APIHandler",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:860311922912:",
                                      {
                                        "Ref": "PFunCMAModelAPIGateway8F423C17"
                                      },
                                      "/test-invoke-stage/*/*"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.93.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Default/{proxy+}/ANY/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "NONE",
                                "httpMethod": "ANY",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "APIHandler",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "PFunCMAModelAPIGatewayproxyE434090B"
                                },
                                "restApiId": {
                                  "Ref": "PFunCMAModelAPIGateway8F423C17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.ProxyResource",
                      "version": "2.93.0"
                    }
                  },
                  "ANY": {
                    "id": "ANY",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Default/ANY",
                    "children": {
                      "ApiPermission.PFunCMAModelChaliceAppPFunCMAModelAPIGateway6A14670E.ANY..": {
                        "id": "ApiPermission.PFunCMAModelChaliceAppPFunCMAModelAPIGateway6A14670E.ANY..",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Default/ANY/ApiPermission.PFunCMAModelChaliceAppPFunCMAModelAPIGateway6A14670E.ANY..",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                          "aws:cdk:cloudformation:props": {
                            "action": "lambda:InvokeFunction",
                            "functionName": {
                              "Fn::GetAtt": [
                                "APIHandler",
                                "Arn"
                              ]
                            },
                            "principal": "apigateway.amazonaws.com",
                            "sourceArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":execute-api:us-east-1:860311922912:",
                                  {
                                    "Ref": "PFunCMAModelAPIGateway8F423C17"
                                  },
                                  "/",
                                  {
                                    "Ref": "PFunCMAModelAPIGatewayDeploymentStageprodF4B4E490"
                                  },
                                  "/*/"
                                ]
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                          "version": "2.93.0"
                        }
                      },
                      "ApiPermission.Test.PFunCMAModelChaliceAppPFunCMAModelAPIGateway6A14670E.ANY..": {
                        "id": "ApiPermission.Test.PFunCMAModelChaliceAppPFunCMAModelAPIGateway6A14670E.ANY..",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Default/ANY/ApiPermission.Test.PFunCMAModelChaliceAppPFunCMAModelAPIGateway6A14670E.ANY..",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                          "aws:cdk:cloudformation:props": {
                            "action": "lambda:InvokeFunction",
                            "functionName": {
                              "Fn::GetAtt": [
                                "APIHandler",
                                "Arn"
                              ]
                            },
                            "principal": "apigateway.amazonaws.com",
                            "sourceArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":execute-api:us-east-1:860311922912:",
                                  {
                                    "Ref": "PFunCMAModelAPIGateway8F423C17"
                                  },
                                  "/test-invoke-stage/*/"
                                ]
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                          "version": "2.93.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelAPIGateway/Default/ANY/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "authorizationType": "NONE",
                            "httpMethod": "ANY",
                            "integration": {
                              "type": "AWS_PROXY",
                              "uri": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                    {
                                      "Fn::GetAtt": [
                                        "APIHandler",
                                        "Arn"
                                      ]
                                    },
                                    "/invocations"
                                  ]
                                ]
                              },
                              "integrationHttpMethod": "POST"
                            },
                            "resourceId": {
                              "Fn::GetAtt": [
                                "PFunCMAModelAPIGateway8F423C17",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "PFunCMAModelAPIGateway8F423C17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.93.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.LambdaRestApi",
              "version": "2.93.0"
            }
          },
          "PFunCMAModelCloudFrontToAPIGateway": {
            "id": "PFunCMAModelCloudFrontToAPIGateway",
            "path": "PFunCMAModelChaliceApp/PFunCMAModelCloudFrontToAPIGateway",
            "children": {
              "SetHttpSecurityHeaders": {
                "id": "SetHttpSecurityHeaders",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelCloudFrontToAPIGateway/SetHttpSecurityHeaders",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelCloudFrontToAPIGateway/SetHttpSecurityHeaders/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFront::Function",
                      "aws:cdk:cloudformation:props": {
                        "autoPublish": true,
                        "functionCode": "function handler(event) { var response = event.response; var headers = response.headers; headers['strict-transport-security'] = { value: 'max-age=63072000; includeSubdomains; preload'}; headers['content-security-policy'] = { value: \"default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'\"}; headers['x-content-type-options'] = { value: 'nosniff'}; headers['x-frame-options'] = {value: 'DENY'}; headers['x-xss-protection'] = {value: '1; mode=block'}; return response; }",
                        "functionConfig": {
                          "comment": "SetHttpSecurityHeadersc833fa54bef79a87136d7a5af7bc77f510c3dd6237",
                          "runtime": "cloudfront-js-1.0"
                        },
                        "name": "SetHttpSecurityHeadersc833fa54bef79a87136d7a5af7bc77f510c3dd6237"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_cloudfront.CfnFunction",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.Function",
                  "version": "2.93.0"
                }
              },
              "CloudfrontLoggingBucket": {
                "id": "CloudfrontLoggingBucket",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelCloudFrontToAPIGateway/CloudfrontLoggingBucket",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelCloudFrontToAPIGateway/CloudfrontLoggingBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "AES256"
                              }
                            }
                          ]
                        },
                        "ownershipControls": {
                          "rules": [
                            {
                              "objectOwnership": "ObjectWriter"
                            }
                          ]
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        },
                        "versioningConfiguration": {
                          "status": "Enabled"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                      "version": "2.93.0"
                    }
                  },
                  "Policy": {
                    "id": "Policy",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelCloudFrontToAPIGateway/CloudfrontLoggingBucket/Policy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelChaliceApp/PFunCMAModelCloudFrontToAPIGateway/CloudfrontLoggingBucket/Policy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                          "aws:cdk:cloudformation:props": {
                            "bucket": {
                              "Ref": "PFunCMAModelCloudFrontToAPIGatewayCloudfrontLoggingBucketB31E2770"
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:*",
                                  "Condition": {
                                    "Bool": {
                                      "aws:SecureTransport": "false"
                                    }
                                  },
                                  "Effect": "Deny",
                                  "Principal": {
                                    "AWS": "*"
                                  },
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "PFunCMAModelCloudFrontToAPIGatewayCloudfrontLoggingBucketB31E2770",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "PFunCMAModelCloudFrontToAPIGatewayCloudfrontLoggingBucketB31E2770",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.Bucket",
                  "version": "2.93.0"
                }
              },
              "CloudFrontDistribution": {
                "id": "CloudFrontDistribution",
                "path": "PFunCMAModelChaliceApp/PFunCMAModelCloudFrontToAPIGateway/CloudFrontDistribution",
                "children": {
                  "Origin1": {
                    "id": "Origin1",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelCloudFrontToAPIGateway/CloudFrontDistribution/Origin1",
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "PFunCMAModelChaliceApp/PFunCMAModelCloudFrontToAPIGateway/CloudFrontDistribution/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                      "aws:cdk:cloudformation:props": {
                        "distributionConfig": {
                          "enabled": true,
                          "origins": [
                            {
                              "domainName": {
                                "Fn::Select": [
                                  0,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Fn::Select": [
                                          1,
                                          {
                                            "Fn::Split": [
                                              "://",
                                              {
                                                "Fn::Join": [
                                                  "",
                                                  [
                                                    "https://",
                                                    {
                                                      "Ref": "PFunCMAModelAPIGateway8F423C17"
                                                    },
                                                    ".execute-api.us-east-1.",
                                                    {
                                                      "Ref": "AWS::URLSuffix"
                                                    },
                                                    "/",
                                                    {
                                                      "Ref": "PFunCMAModelAPIGatewayDeploymentStageprodF4B4E490"
                                                    },
                                                    "/"
                                                  ]
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              "id": "PFunCMAModelChaliceAppPFunCMAModelCloudFrontToAPIGatewayCloudFrontDistributionOrigin157D6F971",
                              "originPath": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "/",
                                    {
                                      "Ref": "PFunCMAModelAPIGatewayDeploymentStageprodF4B4E490"
                                    }
                                  ]
                                ]
                              },
                              "customOriginConfig": {
                                "originSslProtocols": [
                                  "TLSv1.2"
                                ],
                                "originProtocolPolicy": "https-only"
                              }
                            }
                          ],
                          "defaultCacheBehavior": {
                            "pathPattern": "*",
                            "targetOriginId": "PFunCMAModelChaliceAppPFunCMAModelCloudFrontToAPIGatewayCloudFrontDistributionOrigin157D6F971",
                            "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                            "compress": true,
                            "viewerProtocolPolicy": "redirect-to-https",
                            "functionAssociations": [
                              {
                                "functionArn": {
                                  "Fn::GetAtt": [
                                    "PFunCMAModelCloudFrontToAPIGatewaySetHttpSecurityHeadersCEC1B6A8",
                                    "FunctionARN"
                                  ]
                                },
                                "eventType": "viewer-response"
                              }
                            ]
                          },
                          "httpVersion": "http2",
                          "ipv6Enabled": true,
                          "logging": {
                            "bucket": {
                              "Fn::GetAtt": [
                                "PFunCMAModelCloudFrontToAPIGatewayCloudfrontLoggingBucketB31E2770",
                                "RegionalDomainName"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_cloudfront.CfnDistribution",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.Distribution",
                  "version": "2.93.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-solutions-constructs/aws-cloudfront-apigateway.CloudFrontToApiGateway",
              "version": "2.44.0"
            }
          },
          "PFunAlbDNSName": {
            "id": "PFunAlbDNSName",
            "path": "PFunCMAModelChaliceApp/PFunAlbDNSName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.93.0"
            }
          },
          "PFunCMAModelListenerCert": {
            "id": "PFunCMAModelListenerCert",
            "path": "PFunCMAModelChaliceApp/PFunCMAModelListenerCert",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.93.0"
            }
          },
          "PFunDevCMAModelCustomDomainNameMapping": {
            "id": "PFunDevCMAModelCustomDomainNameMapping",
            "path": "PFunCMAModelChaliceApp/PFunDevCMAModelCustomDomainNameMapping",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApiBase",
              "version": "2.93.0"
            }
          },
          "PFunDevCMAModelCustomDomainName": {
            "id": "PFunDevCMAModelCustomDomainName",
            "path": "PFunCMAModelChaliceApp/PFunDevCMAModelCustomDomainName",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PFunCMAModelChaliceApp/PFunDevCMAModelCustomDomainName/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                  "aws:cdk:cloudformation:props": {
                    "domainName": "dev.pfun.app",
                    "endpointConfiguration": {
                      "types": [
                        "REGIONAL"
                      ]
                    },
                    "regionalCertificateArn": "arn:aws:acm:us-east-1:860311922912:certificate/01704bec-f302-4d8a-a1ae-b211d880a9d6"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                  "version": "2.93.0"
                }
              },
              "Map:--=>PFunCMAModelChaliceAppPFunDevCMAModelCustomDomainNameMapping6E32F02B": {
                "id": "Map:--=>PFunCMAModelChaliceAppPFunDevCMAModelCustomDomainNameMapping6E32F02B",
                "path": "PFunCMAModelChaliceApp/PFunDevCMAModelCustomDomainName/Map:--=>PFunCMAModelChaliceAppPFunDevCMAModelCustomDomainNameMapping6E32F02B",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "PFunCMAModelChaliceApp/PFunDevCMAModelCustomDomainName/Map:--=>PFunCMAModelChaliceAppPFunDevCMAModelCustomDomainNameMapping6E32F02B/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                      "aws:cdk:cloudformation:props": {
                        "domainName": {
                          "Ref": "PFunDevCMAModelCustomDomainName37EDFE0E"
                        },
                        "restApiId": {
                          "Fn::GetAtt": [
                            "RestAPI",
                            "RestApiId"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                  "version": "2.93.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
              "version": "2.93.0"
            }
          },
          "PFunDevCMAModelCustomDomainNameRawOutput": {
            "id": "PFunDevCMAModelCustomDomainNameRawOutput",
            "path": "PFunCMAModelChaliceApp/PFunDevCMAModelCustomDomainNameRawOutput",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.93.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "PFunCMAModelChaliceApp/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "PFunCMAModelChaliceApp/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.93.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.69"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "PFunCMAModelChaliceApp/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.93.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "PFunCMAModelChaliceApp/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.93.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.93.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.2.69"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.93.0"
    }
  }
}