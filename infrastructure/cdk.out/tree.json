{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "PFunCMAModelPipelineStack": {
        "id": "PFunCMAModelPipelineStack",
        "path": "PFunCMAModelPipelineStack",
        "children": {
          "Pipeline": {
            "id": "Pipeline",
            "path": "PFunCMAModelPipelineStack/Pipeline",
            "children": {
              "Pipeline": {
                "id": "Pipeline",
                "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline",
                "children": {
                  "ArtifactsBucket": {
                    "id": "ArtifactsBucket",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/ArtifactsBucket",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/ArtifactsBucket/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                          "aws:cdk:cloudformation:props": {
                            "bucketEncryption": {
                              "serverSideEncryptionConfiguration": [
                                {
                                  "serverSideEncryptionByDefault": {
                                    "sseAlgorithm": "aws:kms"
                                  }
                                }
                              ]
                            },
                            "publicAccessBlockConfiguration": {
                              "blockPublicAcls": true,
                              "blockPublicPolicy": true,
                              "ignorePublicAcls": true,
                              "restrictPublicBuckets": true
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                          "version": "2.93.0"
                        }
                      },
                      "Policy": {
                        "id": "Policy",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/ArtifactsBucket/Policy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/ArtifactsBucket/Policy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                              "aws:cdk:cloudformation:props": {
                                "bucket": {
                                  "Ref": "PipelineArtifactsBucketAEA9A052"
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "s3:*",
                                      "Condition": {
                                        "Bool": {
                                          "aws:SecureTransport": "false"
                                        }
                                      },
                                      "Effect": "Deny",
                                      "Principal": {
                                        "AWS": "*"
                                      },
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "PipelineArtifactsBucketAEA9A052",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "PipelineArtifactsBucketAEA9A052",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*"
                                      ],
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::860311922912:role/cdk-hnb659fds-deploy-role-860311922912-us-east-1"
                                            ]
                                          ]
                                        }
                                      },
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "PipelineArtifactsBucketAEA9A052",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "PipelineArtifactsBucketAEA9A052",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.Bucket",
                      "version": "2.93.0"
                    }
                  },
                  "Role": {
                    "id": "Role",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Role",
                    "children": {
                      "ImportRole": {
                        "id": "ImportRole",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Role/ImportRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.93.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "codepipeline.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.93.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject",
                                        "s3:PutObjectLegalHold",
                                        "s3:PutObjectRetention",
                                        "s3:PutObjectTagging",
                                        "s3:PutObjectVersionTagging",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "PipelineArtifactsBucketAEA9A052",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "PipelineArtifactsBucketAEA9A052",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "PipelineCodeBuildActionRole226DB0CB",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":iam::860311922912:role/cdk-hnb659fds-deploy-role-860311922912-us-east-1"
                                          ]
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PipelineRoleDefaultPolicy7BDC1ABB",
                                "roles": [
                                  {
                                    "Ref": "PipelineRoleB27FAA37"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.93.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                      "aws:cdk:cloudformation:props": {
                        "artifactStore": {
                          "type": "S3",
                          "location": {
                            "Ref": "PipelineArtifactsBucketAEA9A052"
                          }
                        },
                        "name": "PFunCMAModelPipeline",
                        "restartExecutionOnUpdate": true,
                        "roleArn": {
                          "Fn::GetAtt": [
                            "PipelineRoleB27FAA37",
                            "Arn"
                          ]
                        },
                        "stages": [
                          {
                            "name": "Source",
                            "actions": [
                              {
                                "name": "rocapp_pfun-cma-model",
                                "outputArtifacts": [
                                  {
                                    "name": "rocapp_pfun_cma_model_Source"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Source",
                                  "version": "1",
                                  "owner": "ThirdParty",
                                  "provider": "GitHub"
                                },
                                "configuration": {
                                  "Owner": "rocapp",
                                  "Repo": "pfun-cma-model",
                                  "Branch": "main",
                                  "OAuthToken": "{{resolve:secretsmanager:github-token:SecretString:::}}",
                                  "PollForSourceChanges": false
                                },
                                "runOrder": 1
                              }
                            ]
                          },
                          {
                            "name": "Build",
                            "actions": [
                              {
                                "name": "Synth",
                                "inputArtifacts": [
                                  {
                                    "name": "rocapp_pfun_cma_model_Source"
                                  }
                                ],
                                "outputArtifacts": [
                                  {
                                    "name": "Synth_Output"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Build",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CodeBuild"
                                },
                                "configuration": {
                                  "ProjectName": {
                                    "Ref": "PipelineBuildSynthCdkBuildProject6BEFA8E6"
                                  },
                                  "EnvironmentVariables": "[{\"name\":\"_PROJECT_CONFIG_HASH\",\"type\":\"PLAINTEXT\",\"value\":\"5107b9c1e1d0f136c4a6e8656ef892ba4cf2f66083de7d30bcf7a700d886d522\"}]"
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "PipelineCodeBuildActionRole226DB0CB",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "name": "UpdatePipeline",
                            "actions": [
                              {
                                "name": "SelfMutate",
                                "inputArtifacts": [
                                  {
                                    "name": "Synth_Output"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Build",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CodeBuild"
                                },
                                "configuration": {
                                  "ProjectName": {
                                    "Ref": "PipelineUpdatePipelineSelfMutationDAA41400"
                                  },
                                  "EnvironmentVariables": "[{\"name\":\"_PROJECT_CONFIG_HASH\",\"type\":\"PLAINTEXT\",\"value\":\"7d8e0a65f6dc4756b182126fad7f5417d2fffc6021e2892d2bd8845f2d223969\"}]"
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "PipelineCodeBuildActionRole226DB0CB",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "name": "Assets",
                            "actions": [
                              {
                                "name": "FileAsset1",
                                "inputArtifacts": [
                                  {
                                    "name": "Synth_Output"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Build",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CodeBuild"
                                },
                                "configuration": {
                                  "ProjectName": {
                                    "Ref": "PipelineAssetsFileAsset185A67CB4"
                                  }
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "PipelineCodeBuildActionRole226DB0CB",
                                    "Arn"
                                  ]
                                }
                              },
                              {
                                "name": "FileAsset2",
                                "inputArtifacts": [
                                  {
                                    "name": "Synth_Output"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Build",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CodeBuild"
                                },
                                "configuration": {
                                  "ProjectName": {
                                    "Ref": "PipelineAssetsFileAsset24D2D639B"
                                  }
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "PipelineCodeBuildActionRole226DB0CB",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "name": "AppStage",
                            "actions": [
                              {
                                "name": "Prepare",
                                "inputArtifacts": [
                                  {
                                    "name": "Synth_Output"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Deploy",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CloudFormation"
                                },
                                "configuration": {
                                  "StackName": "AppStage-ChaliceApp",
                                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                                  "RoleArn": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":iam::860311922912:role/cdk-hnb659fds-cfn-exec-role-860311922912-us-east-1"
                                      ]
                                    ]
                                  },
                                  "ActionMode": "CHANGE_SET_REPLACE",
                                  "ChangeSetName": "PipelineChange",
                                  "TemplatePath": "Synth_Output::assembly-PFunCMAModelPipelineStack-AppStage/PFunCMAModelPipelineStackAppStageChaliceApp9328699E.template.json"
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::860311922912:role/cdk-hnb659fds-deploy-role-860311922912-us-east-1"
                                    ]
                                  ]
                                }
                              },
                              {
                                "name": "Deploy",
                                "actionTypeId": {
                                  "category": "Deploy",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CloudFormation"
                                },
                                "configuration": {
                                  "StackName": "AppStage-ChaliceApp",
                                  "ActionMode": "CHANGE_SET_EXECUTE",
                                  "ChangeSetName": "PipelineChange"
                                },
                                "runOrder": 2,
                                "roleArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::860311922912:role/cdk-hnb659fds-deploy-role-860311922912-us-east-1"
                                    ]
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_codepipeline.CfnPipeline",
                      "version": "2.93.0"
                    }
                  },
                  "Source": {
                    "id": "Source",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Source",
                    "children": {
                      "rocapp_pfun-cma-model": {
                        "id": "rocapp_pfun-cma-model",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Source/rocapp_pfun-cma-model",
                        "children": {
                          "WebhookResource": {
                            "id": "WebhookResource",
                            "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Source/rocapp_pfun-cma-model/WebhookResource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::CodePipeline::Webhook",
                              "aws:cdk:cloudformation:props": {
                                "authentication": "GITHUB_HMAC",
                                "authenticationConfiguration": {
                                  "secretToken": "{{resolve:secretsmanager:github-token:SecretString:::}}"
                                },
                                "filters": [
                                  {
                                    "jsonPath": "$.ref",
                                    "matchEquals": "refs/heads/{Branch}"
                                  }
                                ],
                                "registerWithThirdParty": true,
                                "targetAction": "rocapp_pfun-cma-model",
                                "targetPipeline": {
                                  "Ref": "Pipeline9850B417"
                                },
                                "targetPipelineVersion": 1
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_codepipeline.CfnWebhook",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "constructs.Construct",
                          "version": "10.2.69"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  },
                  "Build": {
                    "id": "Build",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Build",
                    "children": {
                      "Synth": {
                        "id": "Synth",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Build/Synth",
                        "children": {
                          "CdkBuildProject": {
                            "id": "CdkBuildProject",
                            "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Build/Synth/CdkBuildProject",
                            "children": {
                              "Role": {
                                "id": "Role",
                                "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Build/Synth/CdkBuildProject/Role",
                                "children": {
                                  "ImportRole": {
                                    "id": "ImportRole",
                                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Build/Synth/CdkBuildProject/Role/ImportRole",
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.Resource",
                                      "version": "2.93.0"
                                    }
                                  },
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Build/Synth/CdkBuildProject/Role/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                      "aws:cdk:cloudformation:props": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "codebuild.amazonaws.com"
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                                      "version": "2.93.0"
                                    }
                                  },
                                  "DefaultPolicy": {
                                    "id": "DefaultPolicy",
                                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Build/Synth/CdkBuildProject/Role/DefaultPolicy",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Build/Synth/CdkBuildProject/Role/DefaultPolicy/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                          "aws:cdk:cloudformation:props": {
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "logs:CreateLogGroup",
                                                    "logs:CreateLogStream",
                                                    "logs:PutLogEvents"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          "arn:",
                                                          {
                                                            "Ref": "AWS::Partition"
                                                          },
                                                          ":logs:us-east-1:860311922912:log-group:/aws/codebuild/",
                                                          {
                                                            "Ref": "PipelineBuildSynthCdkBuildProject6BEFA8E6"
                                                          }
                                                        ]
                                                      ]
                                                    },
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          "arn:",
                                                          {
                                                            "Ref": "AWS::Partition"
                                                          },
                                                          ":logs:us-east-1:860311922912:log-group:/aws/codebuild/",
                                                          {
                                                            "Ref": "PipelineBuildSynthCdkBuildProject6BEFA8E6"
                                                          },
                                                          ":*"
                                                        ]
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "Action": [
                                                    "codebuild:CreateReportGroup",
                                                    "codebuild:CreateReport",
                                                    "codebuild:UpdateReport",
                                                    "codebuild:BatchPutTestCases",
                                                    "codebuild:BatchPutCodeCoverages"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": {
                                                    "Fn::Join": [
                                                      "",
                                                      [
                                                        "arn:",
                                                        {
                                                          "Ref": "AWS::Partition"
                                                        },
                                                        ":codebuild:us-east-1:860311922912:report-group/",
                                                        {
                                                          "Ref": "PipelineBuildSynthCdkBuildProject6BEFA8E6"
                                                        },
                                                        "-*"
                                                      ]
                                                    ]
                                                  }
                                                },
                                                {
                                                  "Action": [
                                                    "s3:GetObject*",
                                                    "s3:GetBucket*",
                                                    "s3:List*",
                                                    "s3:DeleteObject*",
                                                    "s3:PutObject",
                                                    "s3:PutObjectLegalHold",
                                                    "s3:PutObjectRetention",
                                                    "s3:PutObjectTagging",
                                                    "s3:PutObjectVersionTagging",
                                                    "s3:Abort*"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    {
                                                      "Fn::GetAtt": [
                                                        "PipelineArtifactsBucketAEA9A052",
                                                        "Arn"
                                                      ]
                                                    },
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          {
                                                            "Fn::GetAtt": [
                                                              "PipelineArtifactsBucketAEA9A052",
                                                              "Arn"
                                                            ]
                                                          },
                                                          "/*"
                                                        ]
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "Version": "2012-10-17"
                                            },
                                            "policyName": "PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C",
                                            "roles": [
                                              {
                                                "Ref": "PipelineBuildSynthCdkBuildProjectRole231EEA2A"
                                              }
                                            ]
                                          }
                                        },
                                        "constructInfo": {
                                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                                          "version": "2.93.0"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                                      "version": "2.93.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_iam.Role",
                                  "version": "2.93.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Build/Synth/CdkBuildProject/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                                  "aws:cdk:cloudformation:props": {
                                    "artifacts": {
                                      "type": "CODEPIPELINE"
                                    },
                                    "cache": {
                                      "type": "NO_CACHE"
                                    },
                                    "description": "Pipeline step PFunCMAModelPipelineStack/Pipeline/Build/Synth",
                                    "encryptionKey": "alias/aws/s3",
                                    "environment": {
                                      "type": "LINUX_CONTAINER",
                                      "image": "aws/codebuild/standard:7.0",
                                      "imagePullCredentialsType": "CODEBUILD",
                                      "privilegedMode": false,
                                      "computeType": "BUILD_GENERAL1_SMALL"
                                    },
                                    "serviceRole": {
                                      "Fn::GetAtt": [
                                        "PipelineBuildSynthCdkBuildProjectRole231EEA2A",
                                        "Arn"
                                      ]
                                    },
                                    "source": {
                                      "type": "CODEPIPELINE",
                                      "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"npm install -g aws-cdk\",\n        \"pip install -r requirements.txt\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk synth\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"base-directory\": \"cdk.out\",\n    \"files\": \"**/*\"\n  }\n}"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_codebuild.CfnProject",
                                  "version": "2.93.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_codebuild.PipelineProject",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "constructs.Construct",
                          "version": "10.2.69"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  },
                  "UpdatePipeline": {
                    "id": "UpdatePipeline",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/UpdatePipeline",
                    "children": {
                      "SelfMutate": {
                        "id": "SelfMutate",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/UpdatePipeline/SelfMutate",
                        "constructInfo": {
                          "fqn": "constructs.Construct",
                          "version": "10.2.69"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  },
                  "Assets": {
                    "id": "Assets",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Assets",
                    "children": {
                      "FileAsset1": {
                        "id": "FileAsset1",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Assets/FileAsset1",
                        "constructInfo": {
                          "fqn": "constructs.Construct",
                          "version": "10.2.69"
                        }
                      },
                      "FileAsset2": {
                        "id": "FileAsset2",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/Assets/FileAsset2",
                        "constructInfo": {
                          "fqn": "constructs.Construct",
                          "version": "10.2.69"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  },
                  "AppStage": {
                    "id": "AppStage",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/AppStage",
                    "children": {
                      "Prepare": {
                        "id": "Prepare",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/AppStage/Prepare",
                        "constructInfo": {
                          "fqn": "constructs.Construct",
                          "version": "10.2.69"
                        }
                      },
                      "Deploy": {
                        "id": "Deploy",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/AppStage/Deploy",
                        "constructInfo": {
                          "fqn": "constructs.Construct",
                          "version": "10.2.69"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  },
                  "MutableRolearn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-deploy-role-860311922912-us-east-1": {
                    "id": "MutableRolearn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-deploy-role-860311922912-us-east-1",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/MutableRolearn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-deploy-role-860311922912-us-east-1",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.93.0"
                    }
                  },
                  "arn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-deploy-role-860311922912-us-east-1": {
                    "id": "arn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-deploy-role-860311922912-us-east-1",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/arn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-deploy-role-860311922912-us-east-1",
                    "children": {
                      "8389e75f-0810-4838-bf64-d6f85a95cf83": {
                        "id": "8389e75f-0810-4838-bf64-d6f85a95cf83",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/arn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-deploy-role-860311922912-us-east-1/8389e75f-0810-4838-bf64-d6f85a95cf83",
                        "constructInfo": {
                          "fqn": "constructs.Construct",
                          "version": "10.2.69"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.93.0"
                    }
                  },
                  "MutableRolearn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-cfn-exec-role-860311922912-us-east-1": {
                    "id": "MutableRolearn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-cfn-exec-role-860311922912-us-east-1",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/MutableRolearn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-cfn-exec-role-860311922912-us-east-1",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.93.0"
                    }
                  },
                  "arn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-cfn-exec-role-860311922912-us-east-1": {
                    "id": "arn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-cfn-exec-role-860311922912-us-east-1",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Pipeline/arn:${AWS::Partition}:iam::860311922912:role--cdk-hnb659fds-cfn-exec-role-860311922912-us-east-1",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_codepipeline.Pipeline",
                  "version": "2.93.0"
                }
              },
              "CodeBuildActionRole": {
                "id": "CodeBuildActionRole",
                "path": "PFunCMAModelPipelineStack/Pipeline/CodeBuildActionRole",
                "children": {
                  "ImportCodeBuildActionRole": {
                    "id": "ImportCodeBuildActionRole",
                    "path": "PFunCMAModelPipelineStack/Pipeline/CodeBuildActionRole/ImportCodeBuildActionRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.93.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "PFunCMAModelPipelineStack/Pipeline/CodeBuildActionRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PipelineRoleB27FAA37",
                                    "Arn"
                                  ]
                                }
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.93.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "PFunCMAModelPipelineStack/Pipeline/CodeBuildActionRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelPipelineStack/Pipeline/CodeBuildActionRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "codebuild:BatchGetBuilds",
                                    "codebuild:StartBuild",
                                    "codebuild:StopBuild"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineBuildSynthCdkBuildProject6BEFA8E6",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "codebuild:BatchGetBuilds",
                                    "codebuild:StartBuild",
                                    "codebuild:StopBuild"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineUpdatePipelineSelfMutationDAA41400",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "codebuild:BatchGetBuilds",
                                    "codebuild:StartBuild",
                                    "codebuild:StopBuild"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineAssetsFileAsset185A67CB4",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "codebuild:BatchGetBuilds",
                                    "codebuild:StartBuild",
                                    "codebuild:StopBuild"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineAssetsFileAsset24D2D639B",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "PipelineCodeBuildActionRoleDefaultPolicy1D62A6FE",
                            "roles": [
                              {
                                "Ref": "PipelineCodeBuildActionRole226DB0CB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.93.0"
                }
              },
              "UpdatePipeline": {
                "id": "UpdatePipeline",
                "path": "PFunCMAModelPipelineStack/Pipeline/UpdatePipeline",
                "children": {
                  "SelfMutation": {
                    "id": "SelfMutation",
                    "path": "PFunCMAModelPipelineStack/Pipeline/UpdatePipeline/SelfMutation",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "PFunCMAModelPipelineStack/Pipeline/UpdatePipeline/SelfMutation/Role",
                        "children": {
                          "ImportRole": {
                            "id": "ImportRole",
                            "path": "PFunCMAModelPipelineStack/Pipeline/UpdatePipeline/SelfMutation/Role/ImportRole",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.Resource",
                              "version": "2.93.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "PFunCMAModelPipelineStack/Pipeline/UpdatePipeline/SelfMutation/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "codebuild.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                              "version": "2.93.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "PFunCMAModelPipelineStack/Pipeline/UpdatePipeline/SelfMutation/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "PFunCMAModelPipelineStack/Pipeline/UpdatePipeline/SelfMutation/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "logs:CreateLogGroup",
                                            "logs:CreateLogStream",
                                            "logs:PutLogEvents"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":logs:us-east-1:860311922912:log-group:/aws/codebuild/",
                                                  {
                                                    "Ref": "PipelineUpdatePipelineSelfMutationDAA41400"
                                                  }
                                                ]
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":logs:us-east-1:860311922912:log-group:/aws/codebuild/",
                                                  {
                                                    "Ref": "PipelineUpdatePipelineSelfMutationDAA41400"
                                                  },
                                                  ":*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "codebuild:CreateReportGroup",
                                            "codebuild:CreateReport",
                                            "codebuild:UpdateReport",
                                            "codebuild:BatchPutTestCases",
                                            "codebuild:BatchPutCodeCoverages"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":codebuild:us-east-1:860311922912:report-group/",
                                                {
                                                  "Ref": "PipelineUpdatePipelineSelfMutationDAA41400"
                                                },
                                                "-*"
                                              ]
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Condition": {
                                            "ForAnyValue:StringEquals": {
                                              "iam:ResourceTag/aws-cdk:bootstrap-role": [
                                                "image-publishing",
                                                "file-publishing",
                                                "deploy"
                                              ]
                                            }
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:*:iam::860311922912:role/*"
                                        },
                                        {
                                          "Action": "cloudformation:DescribeStacks",
                                          "Effect": "Allow",
                                          "Resource": "*"
                                        },
                                        {
                                          "Action": "s3:ListBucket",
                                          "Effect": "Allow",
                                          "Resource": "*"
                                        },
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "PipelineArtifactsBucketAEA9A052",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "PipelineArtifactsBucketAEA9A052",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E",
                                    "roles": [
                                      {
                                        "Ref": "PipelineUpdatePipelineSelfMutationRole57E559E8"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                                  "version": "2.93.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.Policy",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Role",
                          "version": "2.93.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelPipelineStack/Pipeline/UpdatePipeline/SelfMutation/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                          "aws:cdk:cloudformation:props": {
                            "artifacts": {
                              "type": "CODEPIPELINE"
                            },
                            "cache": {
                              "type": "NO_CACHE"
                            },
                            "description": "Pipeline step PFunCMAModelPipelineStack/Pipeline/UpdatePipeline/SelfMutate",
                            "encryptionKey": "alias/aws/s3",
                            "environment": {
                              "type": "LINUX_CONTAINER",
                              "image": "aws/codebuild/standard:7.0",
                              "imagePullCredentialsType": "CODEBUILD",
                              "privilegedMode": false,
                              "computeType": "BUILD_GENERAL1_SMALL"
                            },
                            "name": "PFunCMAModelPipeline-selfupdate",
                            "serviceRole": {
                              "Fn::GetAtt": [
                                "PipelineUpdatePipelineSelfMutationRole57E559E8",
                                "Arn"
                              ]
                            },
                            "source": {
                              "type": "CODEPIPELINE",
                              "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"npm install -g aws-cdk@2\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk -a . deploy PFunCMAModelPipelineStack --require-approval=never --verbose\"\n      ]\n    }\n  }\n}"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_codebuild.CfnProject",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_codebuild.PipelineProject",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.2.69"
                }
              },
              "Assets": {
                "id": "Assets",
                "path": "PFunCMAModelPipelineStack/Pipeline/Assets",
                "children": {
                  "FileRole": {
                    "id": "FileRole",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Assets/FileRole",
                    "children": {
                      "ImportFileRole": {
                        "id": "ImportFileRole",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Assets/FileRole/ImportFileRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.93.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Assets/FileRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "codebuild.amazonaws.com"
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":iam::860311922912:root"
                                        ]
                                      ]
                                    }
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.93.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Assets/FileRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "PFunCMAModelPipelineStack/Pipeline/Assets/FileRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":logs:us-east-1:860311922912:log-group:/aws/codebuild/*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "codebuild:CreateReportGroup",
                                        "codebuild:CreateReport",
                                        "codebuild:UpdateReport",
                                        "codebuild:BatchPutTestCases",
                                        "codebuild:BatchPutCodeCoverages"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":codebuild:us-east-1:860311922912:report-group/*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "codebuild:BatchGetBuilds",
                                        "codebuild:StartBuild",
                                        "codebuild:StopBuild"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Sub": "arn:${AWS::Partition}:iam::860311922912:role/cdk-hnb659fds-file-publishing-role-860311922912-us-east-1"
                                      }
                                    },
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "PipelineArtifactsBucketAEA9A052",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "PipelineArtifactsBucketAEA9A052",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PipelineAssetsFileRoleDefaultPolicy14DB8755",
                                "roles": [
                                  {
                                    "Ref": "PipelineAssetsFileRole59943A77"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.93.0"
                    }
                  },
                  "FileAsset1": {
                    "id": "FileAsset1",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Assets/FileAsset1",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Assets/FileAsset1/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                          "aws:cdk:cloudformation:props": {
                            "artifacts": {
                              "type": "CODEPIPELINE"
                            },
                            "cache": {
                              "type": "NO_CACHE"
                            },
                            "description": "Pipeline step PFunCMAModelPipelineStack/Pipeline/Assets/FileAsset1",
                            "encryptionKey": "alias/aws/s3",
                            "environment": {
                              "type": "LINUX_CONTAINER",
                              "image": "aws/codebuild/standard:7.0",
                              "imagePullCredentialsType": "CODEBUILD",
                              "privilegedMode": false,
                              "computeType": "BUILD_GENERAL1_SMALL"
                            },
                            "serviceRole": {
                              "Fn::GetAtt": [
                                "PipelineAssetsFileRole59943A77",
                                "Arn"
                              ]
                            },
                            "source": {
                              "type": "CODEPIPELINE",
                              "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"npm install -g cdk-assets@2\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk-assets --path \\\"assembly-PFunCMAModelPipelineStack-AppStage/PFunCMAModelPipelineStackAppStageChaliceApp9328699E.assets.json\\\" --verbose publish \\\"416d2d609900ffe839708b890766dc2535c3254ba7af5e9f7b96480826718852:860311922912-us-east-1\\\"\"\n      ]\n    }\n  }\n}"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_codebuild.CfnProject",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_codebuild.PipelineProject",
                      "version": "2.93.0"
                    }
                  },
                  "FileAsset2": {
                    "id": "FileAsset2",
                    "path": "PFunCMAModelPipelineStack/Pipeline/Assets/FileAsset2",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelPipelineStack/Pipeline/Assets/FileAsset2/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                          "aws:cdk:cloudformation:props": {
                            "artifacts": {
                              "type": "CODEPIPELINE"
                            },
                            "cache": {
                              "type": "NO_CACHE"
                            },
                            "description": "Pipeline step PFunCMAModelPipelineStack/Pipeline/Assets/FileAsset2",
                            "encryptionKey": "alias/aws/s3",
                            "environment": {
                              "type": "LINUX_CONTAINER",
                              "image": "aws/codebuild/standard:7.0",
                              "imagePullCredentialsType": "CODEBUILD",
                              "privilegedMode": false,
                              "computeType": "BUILD_GENERAL1_SMALL"
                            },
                            "serviceRole": {
                              "Fn::GetAtt": [
                                "PipelineAssetsFileRole59943A77",
                                "Arn"
                              ]
                            },
                            "source": {
                              "type": "CODEPIPELINE",
                              "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"npm install -g cdk-assets@2\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk-assets --path \\\"assembly-PFunCMAModelPipelineStack-AppStage/PFunCMAModelPipelineStackAppStageChaliceApp9328699E.assets.json\\\" --verbose publish \\\"937ac23990892c4f13d19b27c881ca206e743357c724556fe16b427d9506f5d7:860311922912-us-east-1\\\"\"\n      ]\n    }\n  }\n}"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_codebuild.CfnProject",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_codebuild.PipelineProject",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.2.69"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.pipelines.CodePipeline",
              "version": "2.93.0"
            }
          },
          "AppStage": {
            "id": "AppStage",
            "path": "PFunCMAModelPipelineStack/AppStage",
            "children": {
              "ChaliceApp": {
                "id": "ChaliceApp",
                "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp",
                "children": {
                  "PFunCMAModelChaliceApp": {
                    "id": "PFunCMAModelChaliceApp",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp",
                    "children": {
                      "ChaliceAppCode": {
                        "id": "ChaliceAppCode",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceAppCode",
                        "children": {
                          "Stage": {
                            "id": "Stage",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceAppCode/Stage",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.AssetStaging",
                              "version": "2.93.0"
                            }
                          },
                          "AssetBucket": {
                            "id": "AssetBucket",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceAppCode/AssetBucket",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                          "version": "2.93.0"
                        }
                      },
                      "ChaliceManagedLayer": {
                        "id": "ChaliceManagedLayer",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceManagedLayer",
                        "children": {
                          "Stage": {
                            "id": "Stage",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceManagedLayer/Stage",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.AssetStaging",
                              "version": "2.93.0"
                            }
                          },
                          "AssetBucket": {
                            "id": "AssetBucket",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceManagedLayer/AssetBucket",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                          "version": "2.93.0"
                        }
                      },
                      "ChaliceApp": {
                        "id": "ChaliceApp",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp",
                        "children": {
                          "$Mappings": {
                            "id": "$Mappings",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Mappings",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.2.69"
                            }
                          },
                          "$Conditions": {
                            "id": "$Conditions",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Conditions",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.2.69"
                            }
                          },
                          "$Rules": {
                            "id": "$Rules",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Rules",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.2.69"
                            }
                          },
                          "ManagedLayer": {
                            "id": "ManagedLayer",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/ManagedLayer",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Serverless::LayerVersion",
                              "aws:cdk:cloudformation:props": {
                                "compatibleRuntimes": [
                                  "python3.10"
                                ],
                                "contentUri": {
                                  "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                                  "key": "937ac23990892c4f13d19b27c881ca206e743357c724556fe16b427d9506f5d7.zip"
                                },
                                "layerName": "pfun-cma-model-PFunCMAModelPipelineStack/AppStage/ChaliceApp-managed-layer"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_sam.CfnLayerVersion",
                              "version": "2.93.0"
                            }
                          },
                          "RunModel": {
                            "id": "RunModel",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/RunModel",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                              "aws:cdk:cloudformation:props": {
                                "codeUri": {
                                  "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                                  "key": "416d2d609900ffe839708b890766dc2535c3254ba7af5e9f7b96480826718852.zip"
                                },
                                "handler": "app.run_model_with_config",
                                "layers": [
                                  {
                                    "Ref": "ManagedLayer"
                                  },
                                  "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                                ],
                                "memorySize": 128,
                                "runtime": "python3.10",
                                "tags": {
                                  "aws-chalice": "version=1.29.0:stage=PFunCMAModelPipelineStack/AppStage/ChaliceApp:app=pfun-cma-model"
                                },
                                "timeout": 60,
                                "tracing": "PassThrough"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                              "version": "2.93.0"
                            }
                          },
                          "RunAtTime": {
                            "id": "RunAtTime",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/RunAtTime",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                              "aws:cdk:cloudformation:props": {
                                "codeUri": {
                                  "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                                  "key": "416d2d609900ffe839708b890766dc2535c3254ba7af5e9f7b96480826718852.zip"
                                },
                                "handler": "app.run_at_time",
                                "layers": [
                                  {
                                    "Ref": "ManagedLayer"
                                  },
                                  "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                                ],
                                "memorySize": 128,
                                "runtime": "python3.10",
                                "tags": {
                                  "aws-chalice": "version=1.29.0:stage=PFunCMAModelPipelineStack/AppStage/ChaliceApp:app=pfun-cma-model"
                                },
                                "timeout": 60,
                                "tracing": "PassThrough"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                              "version": "2.93.0"
                            }
                          },
                          "FitModel": {
                            "id": "FitModel",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/FitModel",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                              "aws:cdk:cloudformation:props": {
                                "codeUri": {
                                  "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                                  "key": "416d2d609900ffe839708b890766dc2535c3254ba7af5e9f7b96480826718852.zip"
                                },
                                "handler": "app.fit_model_to_data",
                                "layers": [
                                  {
                                    "Ref": "ManagedLayer"
                                  },
                                  "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                                ],
                                "memorySize": 128,
                                "runtime": "python3.10",
                                "tags": {
                                  "aws-chalice": "version=1.29.0:stage=PFunCMAModelPipelineStack/AppStage/ChaliceApp:app=pfun-cma-model"
                                },
                                "timeout": 60,
                                "tracing": "PassThrough"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                              "version": "2.93.0"
                            }
                          },
                          "Oauth2Dexcom": {
                            "id": "Oauth2Dexcom",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/Oauth2Dexcom",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                              "aws:cdk:cloudformation:props": {
                                "codeUri": {
                                  "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                                  "key": "416d2d609900ffe839708b890766dc2535c3254ba7af5e9f7b96480826718852.zip"
                                },
                                "handler": "app.oauth2_dexcom",
                                "layers": [
                                  {
                                    "Ref": "ManagedLayer"
                                  },
                                  "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                                ],
                                "memorySize": 128,
                                "runtime": "python3.10",
                                "tags": {
                                  "aws-chalice": "version=1.29.0:stage=PFunCMAModelPipelineStack/AppStage/ChaliceApp:app=pfun-cma-model"
                                },
                                "timeout": 60,
                                "tracing": "PassThrough"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                              "version": "2.93.0"
                            }
                          },
                          "FakeAuth": {
                            "id": "FakeAuth",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/FakeAuth",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                              "aws:cdk:cloudformation:props": {
                                "codeUri": {
                                  "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                                  "key": "416d2d609900ffe839708b890766dc2535c3254ba7af5e9f7b96480826718852.zip"
                                },
                                "handler": "app.fake_auth",
                                "layers": [
                                  {
                                    "Ref": "ManagedLayer"
                                  },
                                  "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                                ],
                                "memorySize": 128,
                                "runtime": "python3.10",
                                "tags": {
                                  "aws-chalice": "version=1.29.0:stage=PFunCMAModelPipelineStack/AppStage/ChaliceApp:app=pfun-cma-model"
                                },
                                "timeout": 60,
                                "tracing": "PassThrough"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                              "version": "2.93.0"
                            }
                          },
                          "APIHandler": {
                            "id": "APIHandler",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/APIHandler",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                              "aws:cdk:cloudformation:props": {
                                "codeUri": {
                                  "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                                  "key": "416d2d609900ffe839708b890766dc2535c3254ba7af5e9f7b96480826718852.zip"
                                },
                                "handler": "app.app",
                                "layers": [
                                  {
                                    "Ref": "ManagedLayer"
                                  },
                                  "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                                ],
                                "memorySize": 128,
                                "runtime": "python3.10",
                                "tags": {
                                  "aws-chalice": "version=1.29.0:stage=PFunCMAModelPipelineStack/AppStage/ChaliceApp:app=pfun-cma-model"
                                },
                                "timeout": 60,
                                "tracing": "PassThrough"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                              "version": "2.93.0"
                            }
                          },
                          "RestAPI": {
                            "id": "RestAPI",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/RestAPI",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Serverless::Api",
                              "aws:cdk:cloudformation:props": {
                                "definitionBody": {
                                  "swagger": "2.0",
                                  "info": {
                                    "version": "1.0",
                                    "title": "PFun CMA Model Backend"
                                  },
                                  "schemes": [
                                    "https"
                                  ],
                                  "paths": {
                                    "/sdk": {
                                      "get": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200"
                                            }
                                          },
                                          "uri": {
                                            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "httpMethod": "POST",
                                          "contentHandling": "CONVERT_TO_TEXT",
                                          "type": "aws_proxy"
                                        },
                                        "security": [
                                          {
                                            "fake_auth": []
                                          }
                                        ]
                                      },
                                      "options": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            },
                                            "headers": {
                                              "Access-Control-Allow-Methods": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Origin": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Expose-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Max-Age": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Credentials": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                                "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization'",
                                                "method.response.header.Access-Control-Max-Age": "'300'",
                                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                              }
                                            }
                                          },
                                          "requestTemplates": {
                                            "application/json": "{\"statusCode\": 200}"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "type": "mock",
                                          "contentHandling": "CONVERT_TO_TEXT"
                                        }
                                      }
                                    },
                                    "/": {
                                      "get": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200"
                                            }
                                          },
                                          "uri": {
                                            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "httpMethod": "POST",
                                          "contentHandling": "CONVERT_TO_TEXT",
                                          "type": "aws_proxy"
                                        },
                                        "summary": "Generates the index page for the web application.",
                                        "description": "Returns:\n    Response: The HTTP response object containing the index page."
                                      },
                                      "options": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            },
                                            "headers": {
                                              "Access-Control-Allow-Methods": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Origin": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Expose-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Max-Age": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Credentials": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                                "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization'",
                                                "method.response.header.Access-Control-Max-Age": "'300'",
                                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                              }
                                            }
                                          },
                                          "requestTemplates": {
                                            "application/json": "{\"statusCode\": 200}"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "type": "mock",
                                          "contentHandling": "CONVERT_TO_TEXT"
                                        }
                                      }
                                    },
                                    "/routes": {
                                      "get": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200"
                                            }
                                          },
                                          "uri": {
                                            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "httpMethod": "POST",
                                          "contentHandling": "CONVERT_TO_TEXT",
                                          "type": "aws_proxy"
                                        }
                                      },
                                      "options": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            },
                                            "headers": {
                                              "Access-Control-Allow-Methods": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Origin": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Expose-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Max-Age": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Credentials": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                                "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization'",
                                                "method.response.header.Access-Control-Max-Age": "'300'",
                                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                              }
                                            }
                                          },
                                          "requestTemplates": {
                                            "application/json": "{\"statusCode\": 200}"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "type": "mock",
                                          "contentHandling": "CONVERT_TO_TEXT"
                                        }
                                      }
                                    },
                                    "/log": {
                                      "get": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200"
                                            }
                                          },
                                          "uri": {
                                            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "httpMethod": "POST",
                                          "contentHandling": "CONVERT_TO_TEXT",
                                          "type": "aws_proxy"
                                        },
                                        "security": [
                                          {
                                            "fake_auth": []
                                          }
                                        ]
                                      },
                                      "post": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200"
                                            }
                                          },
                                          "uri": {
                                            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "httpMethod": "POST",
                                          "contentHandling": "CONVERT_TO_TEXT",
                                          "type": "aws_proxy"
                                        },
                                        "security": [
                                          {
                                            "fake_auth": []
                                          }
                                        ]
                                      },
                                      "options": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            },
                                            "headers": {
                                              "Access-Control-Allow-Methods": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Origin": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Expose-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Max-Age": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Credentials": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                                "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization'",
                                                "method.response.header.Access-Control-Max-Age": "'300'",
                                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                              }
                                            }
                                          },
                                          "requestTemplates": {
                                            "application/json": "{\"statusCode\": 200}"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "type": "mock",
                                          "contentHandling": "CONVERT_TO_TEXT"
                                        }
                                      }
                                    },
                                    "/run": {
                                      "get": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200"
                                            }
                                          },
                                          "uri": {
                                            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "httpMethod": "POST",
                                          "contentHandling": "CONVERT_TO_TEXT",
                                          "type": "aws_proxy"
                                        },
                                        "summary": "A function that returns a message containing the welcome message and the",
                                        "description": "routes of the PFun CMA Model API.",
                                        "security": [
                                          {
                                            "fake_auth": []
                                          }
                                        ]
                                      },
                                      "post": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200"
                                            }
                                          },
                                          "uri": {
                                            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "httpMethod": "POST",
                                          "contentHandling": "CONVERT_TO_TEXT",
                                          "type": "aws_proxy"
                                        },
                                        "summary": "A function that returns a message containing the welcome message and the",
                                        "description": "routes of the PFun CMA Model API.",
                                        "security": [
                                          {
                                            "fake_auth": []
                                          }
                                        ]
                                      },
                                      "options": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            },
                                            "headers": {
                                              "Access-Control-Allow-Methods": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Origin": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Expose-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Max-Age": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Credentials": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                                "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization'",
                                                "method.response.header.Access-Control-Max-Age": "'300'",
                                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                              }
                                            }
                                          },
                                          "requestTemplates": {
                                            "application/json": "{\"statusCode\": 200}"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "type": "mock",
                                          "contentHandling": "CONVERT_TO_TEXT"
                                        }
                                      }
                                    },
                                    "/run-at-time": {
                                      "get": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200"
                                            }
                                          },
                                          "uri": {
                                            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "httpMethod": "POST",
                                          "contentHandling": "CONVERT_TO_TEXT",
                                          "type": "aws_proxy"
                                        },
                                        "security": [
                                          {
                                            "fake_auth": []
                                          }
                                        ]
                                      },
                                      "post": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200"
                                            }
                                          },
                                          "uri": {
                                            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "httpMethod": "POST",
                                          "contentHandling": "CONVERT_TO_TEXT",
                                          "type": "aws_proxy"
                                        },
                                        "security": [
                                          {
                                            "fake_auth": []
                                          }
                                        ]
                                      },
                                      "options": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            },
                                            "headers": {
                                              "Access-Control-Allow-Methods": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Origin": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Expose-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Max-Age": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Credentials": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                                "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization'",
                                                "method.response.header.Access-Control-Max-Age": "'300'",
                                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                              }
                                            }
                                          },
                                          "requestTemplates": {
                                            "application/json": "{\"statusCode\": 200}"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "type": "mock",
                                          "contentHandling": "CONVERT_TO_TEXT"
                                        }
                                      }
                                    },
                                    "/fit": {
                                      "post": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200"
                                            }
                                          },
                                          "uri": {
                                            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "httpMethod": "POST",
                                          "contentHandling": "CONVERT_TO_TEXT",
                                          "type": "aws_proxy"
                                        },
                                        "security": [
                                          {
                                            "fake_auth": []
                                          }
                                        ]
                                      },
                                      "options": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            },
                                            "headers": {
                                              "Access-Control-Allow-Methods": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Origin": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Expose-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Max-Age": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Credentials": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                                "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization'",
                                                "method.response.header.Access-Control-Max-Age": "'300'",
                                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                              }
                                            }
                                          },
                                          "requestTemplates": {
                                            "application/json": "{\"statusCode\": 200}"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "type": "mock",
                                          "contentHandling": "CONVERT_TO_TEXT"
                                        }
                                      }
                                    },
                                    "/login-success": {
                                      "get": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200"
                                            }
                                          },
                                          "uri": {
                                            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "httpMethod": "POST",
                                          "contentHandling": "CONVERT_TO_TEXT",
                                          "type": "aws_proxy"
                                        }
                                      },
                                      "options": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            },
                                            "headers": {
                                              "Access-Control-Allow-Methods": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Origin": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Expose-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Max-Age": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Credentials": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                                "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization'",
                                                "method.response.header.Access-Control-Max-Age": "'300'",
                                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                              }
                                            }
                                          },
                                          "requestTemplates": {
                                            "application/json": "{\"statusCode\": 200}"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "type": "mock",
                                          "contentHandling": "CONVERT_TO_TEXT"
                                        }
                                      }
                                    },
                                    "/login-dexcom": {
                                      "get": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200"
                                            }
                                          },
                                          "uri": {
                                            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "httpMethod": "POST",
                                          "contentHandling": "CONVERT_TO_TEXT",
                                          "type": "aws_proxy"
                                        }
                                      },
                                      "options": {
                                        "consumes": [
                                          "application/json"
                                        ],
                                        "produces": [
                                          "application/json"
                                        ],
                                        "responses": {
                                          "200": {
                                            "description": "200 response",
                                            "schema": {
                                              "$ref": "#/definitions/Empty"
                                            },
                                            "headers": {
                                              "Access-Control-Allow-Methods": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Origin": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Expose-Headers": {
                                                "type": "string"
                                              },
                                              "Access-Control-Max-Age": {
                                                "type": "string"
                                              },
                                              "Access-Control-Allow-Credentials": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "x-amazon-apigateway-integration": {
                                          "responses": {
                                            "default": {
                                              "statusCode": "200",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                                                "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host,X-API-Key,Authorization'",
                                                "method.response.header.Access-Control-Max-Age": "'300'",
                                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                              }
                                            }
                                          },
                                          "requestTemplates": {
                                            "application/json": "{\"statusCode\": 200}"
                                          },
                                          "passthroughBehavior": "when_no_match",
                                          "type": "mock",
                                          "contentHandling": "CONVERT_TO_TEXT"
                                        }
                                      }
                                    }
                                  },
                                  "definitions": {
                                    "Empty": {
                                      "type": "object",
                                      "title": "Empty Schema"
                                    }
                                  },
                                  "x-amazon-apigateway-binary-media-types": [
                                    "application/octet-stream",
                                    "application/x-tar",
                                    "application/zip",
                                    "audio/basic",
                                    "audio/ogg",
                                    "audio/mp4",
                                    "audio/mpeg",
                                    "audio/wav",
                                    "audio/webm",
                                    "image/png",
                                    "image/jpg",
                                    "image/jpeg",
                                    "image/gif",
                                    "video/ogg",
                                    "video/mpeg",
                                    "video/webm"
                                  ],
                                  "securityDefinitions": {
                                    "fake_auth": {
                                      "in": "header",
                                      "type": "apiKey",
                                      "name": "Authorization",
                                      "x-amazon-apigateway-authtype": "custom",
                                      "x-amazon-apigateway-authorizer": {
                                        "type": "token",
                                        "authorizerUri": {
                                          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FakeAuth.Arn}/invocations"
                                        }
                                      }
                                    }
                                  }
                                },
                                "endpointConfiguration": "EDGE",
                                "stageName": "api"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_sam.CfnApi",
                              "version": "2.93.0"
                            }
                          },
                          "APIHandlerInvokePermission": {
                            "id": "APIHandlerInvokePermission",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/APIHandlerInvokePermission",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Ref": "APIHandler"
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Sub": [
                                    "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*",
                                    {
                                      "RestAPIId": {
                                        "Ref": "RestAPI"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.93.0"
                            }
                          },
                          "FakeAuthInvokePermission": {
                            "id": "FakeAuthInvokePermission",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/FakeAuthInvokePermission",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "FakeAuth",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Sub": [
                                    "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*",
                                    {
                                      "RestAPIId": {
                                        "Ref": "RestAPI"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.93.0"
                            }
                          },
                          "WebsocketConnect": {
                            "id": "WebsocketConnect",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketConnect",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                              "aws:cdk:cloudformation:props": {
                                "codeUri": {
                                  "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                                  "key": "416d2d609900ffe839708b890766dc2535c3254ba7af5e9f7b96480826718852.zip"
                                },
                                "handler": "app.run_at_time_connect",
                                "layers": [
                                  {
                                    "Ref": "ManagedLayer"
                                  },
                                  "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                                ],
                                "memorySize": 128,
                                "runtime": "python3.10",
                                "tags": {
                                  "aws-chalice": "version=1.29.0:stage=PFunCMAModelPipelineStack/AppStage/ChaliceApp:app=pfun-cma-model"
                                },
                                "timeout": 60,
                                "tracing": "PassThrough"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                              "version": "2.93.0"
                            }
                          },
                          "WebsocketMessage": {
                            "id": "WebsocketMessage",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketMessage",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                              "aws:cdk:cloudformation:props": {
                                "codeUri": {
                                  "bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
                                  "key": "416d2d609900ffe839708b890766dc2535c3254ba7af5e9f7b96480826718852.zip"
                                },
                                "handler": "app.run_at_time_ws",
                                "layers": [
                                  {
                                    "Ref": "ManagedLayer"
                                  },
                                  "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
                                ],
                                "memorySize": 128,
                                "runtime": "python3.10",
                                "tags": {
                                  "aws-chalice": "version=1.29.0:stage=PFunCMAModelPipelineStack/AppStage/ChaliceApp:app=pfun-cma-model"
                                },
                                "timeout": 60,
                                "tracing": "PassThrough"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_sam.CfnFunction",
                              "version": "2.93.0"
                            }
                          },
                          "WebsocketAPI": {
                            "id": "WebsocketAPI",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketAPI",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Api",
                              "aws:cdk:cloudformation:props": {
                                "name": "pfun-cma-model-PFunCMAModelPipelineStack/AppStage/ChaliceApp-websocket-api",
                                "protocolType": "WEBSOCKET",
                                "routeSelectionExpression": "$request.body.action"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnApi",
                              "version": "2.93.0"
                            }
                          },
                          "WebsocketConnectAPIIntegration": {
                            "id": "WebsocketConnectAPIIntegration",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketConnectAPIIntegration",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Integration",
                              "aws:cdk:cloudformation:props": {
                                "apiId": {
                                  "Ref": "WebsocketAPI"
                                },
                                "connectionType": "INTERNET",
                                "contentHandlingStrategy": "CONVERT_TO_TEXT",
                                "integrationType": "AWS_PROXY",
                                "integrationUri": {
                                  "Fn::Sub": [
                                    "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${WebsocketHandler}/invocations",
                                    {
                                      "WebsocketHandler": {
                                        "Ref": "WebsocketConnect"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnIntegration",
                              "version": "2.93.0"
                            }
                          },
                          "WebsocketConnectInvokePermission": {
                            "id": "WebsocketConnectInvokePermission",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketConnectInvokePermission",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Ref": "WebsocketConnect"
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Sub": [
                                    "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketAPIId}/*",
                                    {
                                      "WebsocketAPIId": {
                                        "Ref": "WebsocketAPI"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.93.0"
                            }
                          },
                          "WebsocketMessageAPIIntegration": {
                            "id": "WebsocketMessageAPIIntegration",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketMessageAPIIntegration",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Integration",
                              "aws:cdk:cloudformation:props": {
                                "apiId": {
                                  "Ref": "WebsocketAPI"
                                },
                                "connectionType": "INTERNET",
                                "contentHandlingStrategy": "CONVERT_TO_TEXT",
                                "integrationType": "AWS_PROXY",
                                "integrationUri": {
                                  "Fn::Sub": [
                                    "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${WebsocketHandler}/invocations",
                                    {
                                      "WebsocketHandler": {
                                        "Ref": "WebsocketMessage"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnIntegration",
                              "version": "2.93.0"
                            }
                          },
                          "WebsocketMessageInvokePermission": {
                            "id": "WebsocketMessageInvokePermission",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketMessageInvokePermission",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Ref": "WebsocketMessage"
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Sub": [
                                    "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketAPIId}/*",
                                    {
                                      "WebsocketAPIId": {
                                        "Ref": "WebsocketAPI"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.93.0"
                            }
                          },
                          "WebsocketConnectRoute": {
                            "id": "WebsocketConnectRoute",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketConnectRoute",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Route",
                              "aws:cdk:cloudformation:props": {
                                "apiId": {
                                  "Ref": "WebsocketAPI"
                                },
                                "routeKey": "$connect",
                                "target": {
                                  "Fn::Join": [
                                    "/",
                                    [
                                      "integrations",
                                      {
                                        "Ref": "WebsocketConnectAPIIntegration"
                                      }
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnRoute",
                              "version": "2.93.0"
                            }
                          },
                          "WebsocketMessageRoute": {
                            "id": "WebsocketMessageRoute",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketMessageRoute",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Route",
                              "aws:cdk:cloudformation:props": {
                                "apiId": {
                                  "Ref": "WebsocketAPI"
                                },
                                "routeKey": "$default",
                                "target": {
                                  "Fn::Join": [
                                    "/",
                                    [
                                      "integrations",
                                      {
                                        "Ref": "WebsocketMessageAPIIntegration"
                                      }
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnRoute",
                              "version": "2.93.0"
                            }
                          },
                          "WebsocketAPIDeployment": {
                            "id": "WebsocketAPIDeployment",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketAPIDeployment",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Deployment",
                              "aws:cdk:cloudformation:props": {
                                "apiId": {
                                  "Ref": "WebsocketAPI"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnDeployment",
                              "version": "2.93.0"
                            }
                          },
                          "WebsocketAPIStage": {
                            "id": "WebsocketAPIStage",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/WebsocketAPIStage",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Stage",
                              "aws:cdk:cloudformation:props": {
                                "apiId": {
                                  "Ref": "WebsocketAPI"
                                },
                                "deploymentId": {
                                  "Ref": "WebsocketAPIDeployment"
                                },
                                "stageName": "api"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnStage",
                              "version": "2.93.0"
                            }
                          },
                          "$Hooks": {
                            "id": "$Hooks",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Hooks",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.2.69"
                            }
                          },
                          "$Ouputs": {
                            "id": "$Ouputs",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs",
                            "children": {
                              "RestAPIId": {
                                "id": "RestAPIId",
                                "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/RestAPIId",
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.CfnOutput",
                                  "version": "2.93.0"
                                }
                              },
                              "APIHandlerName": {
                                "id": "APIHandlerName",
                                "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/APIHandlerName",
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.CfnOutput",
                                  "version": "2.93.0"
                                }
                              },
                              "APIHandlerArn": {
                                "id": "APIHandlerArn",
                                "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/APIHandlerArn",
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.CfnOutput",
                                  "version": "2.93.0"
                                }
                              },
                              "EndpointURL": {
                                "id": "EndpointURL",
                                "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/EndpointURL",
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.CfnOutput",
                                  "version": "2.93.0"
                                }
                              },
                              "WebsocketAPIId": {
                                "id": "WebsocketAPIId",
                                "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/WebsocketAPIId",
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.CfnOutput",
                                  "version": "2.93.0"
                                }
                              },
                              "WebsocketConnectHandlerArn": {
                                "id": "WebsocketConnectHandlerArn",
                                "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/WebsocketConnectHandlerArn",
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.CfnOutput",
                                  "version": "2.93.0"
                                }
                              },
                              "WebsocketConnectHandlerName": {
                                "id": "WebsocketConnectHandlerName",
                                "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/WebsocketConnectHandlerName",
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.CfnOutput",
                                  "version": "2.93.0"
                                }
                              },
                              "WebsocketMessageHandlerArn": {
                                "id": "WebsocketMessageHandlerArn",
                                "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/WebsocketMessageHandlerArn",
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.CfnOutput",
                                  "version": "2.93.0"
                                }
                              },
                              "WebsocketMessageHandlerName": {
                                "id": "WebsocketMessageHandlerName",
                                "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/WebsocketMessageHandlerName",
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.CfnOutput",
                                  "version": "2.93.0"
                                }
                              },
                              "WebsocketConnectEndpointURL": {
                                "id": "WebsocketConnectEndpointURL",
                                "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/ChaliceApp/$Ouputs/WebsocketConnectEndpointURL",
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.CfnOutput",
                                  "version": "2.93.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.2.69"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.cloudformation_include.CfnInclude",
                          "version": "2.93.0"
                        }
                      },
                      "RunModel": {
                        "id": "RunModel",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/RunModel",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                          "version": "2.93.0"
                        }
                      },
                      "FitModel": {
                        "id": "FitModel",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/FitModel",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                          "version": "2.93.0"
                        }
                      },
                      "RunAtTime": {
                        "id": "RunAtTime",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/RunAtTime",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                          "version": "2.93.0"
                        }
                      },
                      "FakeAuth": {
                        "id": "FakeAuth",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/FakeAuth",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                          "version": "2.93.0"
                        }
                      },
                      "APIHandler": {
                        "id": "APIHandler",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelChaliceApp/APIHandler",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  },
                  "PFunCMAModelVPC": {
                    "id": "PFunCMAModelVPC",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                          "aws:cdk:cloudformation:props": {
                            "cidrBlock": "10.0.0.0/16",
                            "enableDnsHostnames": true,
                            "enableDnsSupport": true,
                            "instanceTenancy": "default",
                            "tags": [
                              {
                                "key": "Name",
                                "value": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnVPC",
                          "version": "2.93.0"
                        }
                      },
                      "publicSubnet1": {
                        "id": "publicSubnet1",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet1",
                        "children": {
                          "Subnet": {
                            "id": "Subnet",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet1/Subnet",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                              "aws:cdk:cloudformation:props": {
                                "availabilityZone": "us-east-1a",
                                "cidrBlock": "10.0.0.0/17",
                                "mapPublicIpOnLaunch": true,
                                "tags": [
                                  {
                                    "key": "aws-cdk:subnet-name",
                                    "value": "public"
                                  },
                                  {
                                    "key": "aws-cdk:subnet-type",
                                    "value": "Public"
                                  },
                                  {
                                    "key": "Name",
                                    "value": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet1"
                                  }
                                ],
                                "vpcId": {
                                  "Ref": "PFunCMAModelVPC45F492DB"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                              "version": "2.93.0"
                            }
                          },
                          "Acl": {
                            "id": "Acl",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet1/Acl",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.Resource",
                              "version": "2.93.0"
                            }
                          },
                          "RouteTable": {
                            "id": "RouteTable",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet1/RouteTable",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                              "aws:cdk:cloudformation:props": {
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet1"
                                  }
                                ],
                                "vpcId": {
                                  "Ref": "PFunCMAModelVPC45F492DB"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                              "version": "2.93.0"
                            }
                          },
                          "RouteTableAssociation": {
                            "id": "RouteTableAssociation",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet1/RouteTableAssociation",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                              "aws:cdk:cloudformation:props": {
                                "routeTableId": {
                                  "Ref": "PFunCMAModelVPCpublicSubnet1RouteTableA470CB3E"
                                },
                                "subnetId": {
                                  "Ref": "PFunCMAModelVPCpublicSubnet1Subnet8C7FD47D"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                              "version": "2.93.0"
                            }
                          },
                          "DefaultRoute": {
                            "id": "DefaultRoute",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet1/DefaultRoute",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                              "aws:cdk:cloudformation:props": {
                                "destinationCidrBlock": "0.0.0.0/0",
                                "gatewayId": {
                                  "Ref": "PFunCMAModelVPCIGW41DFF152"
                                },
                                "routeTableId": {
                                  "Ref": "PFunCMAModelVPCpublicSubnet1RouteTableA470CB3E"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                              "version": "2.93.0"
                            }
                          },
                          "EIP": {
                            "id": "EIP",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet1/EIP",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                              "aws:cdk:cloudformation:props": {
                                "domain": "vpc",
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet1"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_ec2.CfnEIP",
                              "version": "2.93.0"
                            }
                          },
                          "NATGateway": {
                            "id": "NATGateway",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet1/NATGateway",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                              "aws:cdk:cloudformation:props": {
                                "allocationId": {
                                  "Fn::GetAtt": [
                                    "PFunCMAModelVPCpublicSubnet1EIP7E238277",
                                    "AllocationId"
                                  ]
                                },
                                "subnetId": {
                                  "Ref": "PFunCMAModelVPCpublicSubnet1Subnet8C7FD47D"
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet1"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_ec2.CfnNatGateway",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                          "version": "2.93.0"
                        }
                      },
                      "publicSubnet2": {
                        "id": "publicSubnet2",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet2",
                        "children": {
                          "Subnet": {
                            "id": "Subnet",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet2/Subnet",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                              "aws:cdk:cloudformation:props": {
                                "availabilityZone": "us-east-1b",
                                "cidrBlock": "10.0.128.0/17",
                                "mapPublicIpOnLaunch": true,
                                "tags": [
                                  {
                                    "key": "aws-cdk:subnet-name",
                                    "value": "public"
                                  },
                                  {
                                    "key": "aws-cdk:subnet-type",
                                    "value": "Public"
                                  },
                                  {
                                    "key": "Name",
                                    "value": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet2"
                                  }
                                ],
                                "vpcId": {
                                  "Ref": "PFunCMAModelVPC45F492DB"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                              "version": "2.93.0"
                            }
                          },
                          "Acl": {
                            "id": "Acl",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet2/Acl",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.Resource",
                              "version": "2.93.0"
                            }
                          },
                          "RouteTable": {
                            "id": "RouteTable",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet2/RouteTable",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                              "aws:cdk:cloudformation:props": {
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet2"
                                  }
                                ],
                                "vpcId": {
                                  "Ref": "PFunCMAModelVPC45F492DB"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                              "version": "2.93.0"
                            }
                          },
                          "RouteTableAssociation": {
                            "id": "RouteTableAssociation",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet2/RouteTableAssociation",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                              "aws:cdk:cloudformation:props": {
                                "routeTableId": {
                                  "Ref": "PFunCMAModelVPCpublicSubnet2RouteTableA662863B"
                                },
                                "subnetId": {
                                  "Ref": "PFunCMAModelVPCpublicSubnet2SubnetB6BCDE86"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                              "version": "2.93.0"
                            }
                          },
                          "DefaultRoute": {
                            "id": "DefaultRoute",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/publicSubnet2/DefaultRoute",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                              "aws:cdk:cloudformation:props": {
                                "destinationCidrBlock": "0.0.0.0/0",
                                "gatewayId": {
                                  "Ref": "PFunCMAModelVPCIGW41DFF152"
                                },
                                "routeTableId": {
                                  "Ref": "PFunCMAModelVPCpublicSubnet2RouteTableA662863B"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                          "version": "2.93.0"
                        }
                      },
                      "IGW": {
                        "id": "IGW",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/IGW",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                          "aws:cdk:cloudformation:props": {
                            "tags": [
                              {
                                "key": "Name",
                                "value": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnInternetGateway",
                          "version": "2.93.0"
                        }
                      },
                      "VPCGW": {
                        "id": "VPCGW",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelVPC/VPCGW",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                          "aws:cdk:cloudformation:props": {
                            "internetGatewayId": {
                              "Ref": "PFunCMAModelVPCIGW41DFF152"
                            },
                            "vpcId": {
                              "Ref": "PFunCMAModelVPC45F492DB"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnVPCGatewayAttachment",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.Vpc",
                      "version": "2.93.0"
                    }
                  },
                  "PFunCMAModelLoadBalancer": {
                    "id": "PFunCMAModelLoadBalancer",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelLoadBalancer",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelLoadBalancer/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                          "aws:cdk:cloudformation:props": {
                            "ipAddressType": "ipv4",
                            "loadBalancerAttributes": [
                              {
                                "key": "deletion_protection.enabled",
                                "value": "false"
                              }
                            ],
                            "scheme": "internet-facing",
                            "securityGroups": [
                              {
                                "Fn::GetAtt": [
                                  "PFunCMAModelLoadBalancerSecurityGroupE55A7C00",
                                  "GroupId"
                                ]
                              },
                              {
                                "Fn::GetAtt": [
                                  "PFunAlbSecurityGroupDA3A5D19",
                                  "GroupId"
                                ]
                              }
                            ],
                            "subnets": [
                              {
                                "Ref": "PFunCMAModelVPCpublicSubnet1Subnet8C7FD47D"
                              },
                              {
                                "Ref": "PFunCMAModelVPCpublicSubnet2SubnetB6BCDE86"
                              }
                            ],
                            "type": "application"
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnLoadBalancer",
                          "version": "2.93.0"
                        }
                      },
                      "SecurityGroup": {
                        "id": "SecurityGroup",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelLoadBalancer/SecurityGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelLoadBalancer/SecurityGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                              "aws:cdk:cloudformation:props": {
                                "groupDescription": "Automatically created Security Group for ELB PFunCMAModelPipelineStackAppStageChaliceAppPFunCMAModelLoadBalancer751B9A6F",
                                "securityGroupEgress": [
                                  {
                                    "cidrIp": "255.255.255.255/32",
                                    "description": "Disallow all traffic",
                                    "ipProtocol": "icmp",
                                    "fromPort": 252,
                                    "toPort": 86
                                  }
                                ],
                                "securityGroupIngress": [
                                  {
                                    "cidrIp": "0.0.0.0/0",
                                    "ipProtocol": "tcp",
                                    "fromPort": 443,
                                    "toPort": 443,
                                    "description": "Allow from anyone on port 443"
                                  },
                                  {
                                    "cidrIp": "0.0.0.0/0",
                                    "ipProtocol": "tcp",
                                    "fromPort": 80,
                                    "toPort": 80,
                                    "description": "Allow from anyone on port 80"
                                  }
                                ],
                                "vpcId": {
                                  "Ref": "PFunCMAModelVPC45F492DB"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                          "version": "2.93.0"
                        }
                      },
                      "PFunCMAModelListener": {
                        "id": "PFunCMAModelListener",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelLoadBalancer/PFunCMAModelListener",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelLoadBalancer/PFunCMAModelListener/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                              "aws:cdk:cloudformation:props": {
                                "certificates": [
                                  {
                                    "certificateArn": "arn:aws:acm:us-east-1:860311922912:certificate/01704bec-f302-4d8a-a1ae-b211d880a9d6"
                                  }
                                ],
                                "defaultActions": [
                                  {
                                    "type": "forward",
                                    "targetGroupArn": {
                                      "Ref": "PFunCMAModelLoadBalancerPFunCMAModelListenerPFunCMAModelAPIHandlerTargetGroup31AC0FA1"
                                    }
                                  }
                                ],
                                "loadBalancerArn": {
                                  "Ref": "PFunCMAModelLoadBalancer930A86BD"
                                },
                                "port": 443,
                                "protocol": "HTTPS"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnListener",
                              "version": "2.93.0"
                            }
                          },
                          "PFunCMAModelAPIHandlerTargetGroup": {
                            "id": "PFunCMAModelAPIHandlerTargetGroup",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelLoadBalancer/PFunCMAModelListener/PFunCMAModelAPIHandlerTargetGroup",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelLoadBalancer/PFunCMAModelListener/PFunCMAModelAPIHandlerTargetGroup/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                                  "aws:cdk:cloudformation:props": {
                                    "healthCheckIntervalSeconds": 300,
                                    "targets": [
                                      {
                                        "id": {
                                          "Fn::GetAtt": [
                                            "APIHandler",
                                            "Arn"
                                          ]
                                        }
                                      }
                                    ],
                                    "targetType": "lambda"
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnTargetGroup",
                                  "version": "2.93.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationTargetGroup",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener",
                          "version": "2.93.0"
                        }
                      },
                      "Redirect80To443": {
                        "id": "Redirect80To443",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelLoadBalancer/Redirect80To443",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelLoadBalancer/Redirect80To443/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                              "aws:cdk:cloudformation:props": {
                                "defaultActions": [
                                  {
                                    "type": "redirect",
                                    "redirectConfig": {
                                      "statusCode": "HTTP_301",
                                      "port": "443",
                                      "protocol": "HTTPS"
                                    }
                                  }
                                ],
                                "loadBalancerArn": {
                                  "Ref": "PFunCMAModelLoadBalancer930A86BD"
                                },
                                "port": 80,
                                "protocol": "HTTP"
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnListener",
                              "version": "2.93.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancer",
                      "version": "2.93.0"
                    }
                  },
                  "PFunAlbSecurityGroup": {
                    "id": "PFunAlbSecurityGroup",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunAlbSecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunAlbSecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunAlbSecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "ipProtocol": "tcp",
                                "fromPort": 443,
                                "toPort": 443,
                                "description": "Allow from anyone on port 443"
                              },
                              {
                                "cidrIp": "0.0.0.0/0",
                                "ipProtocol": "tcp",
                                "fromPort": 80,
                                "toPort": 80,
                                "description": "Allow from anyone on port 80"
                              }
                            ],
                            "vpcId": {
                              "Ref": "PFunCMAModelVPC45F492DB"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                      "version": "2.93.0"
                    }
                  },
                  "PFunCMAModelListenerCert": {
                    "id": "PFunCMAModelListenerCert",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelListenerCert",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.93.0"
                    }
                  },
                  "PFunCMAModelPipelineStack--AppStage--ChaliceApp--PFunCMAModelChaliceApp--APIHandler": {
                    "id": "PFunCMAModelPipelineStack--AppStage--ChaliceApp--PFunCMAModelChaliceApp--APIHandler",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelPipelineStack--AppStage--ChaliceApp--PFunCMAModelChaliceApp--APIHandler",
                    "children": {
                      "Invoke2UTWxhlfyqbT5FTn--5jvgbLgj+FfJwzswGk55DU1H--Y=": {
                        "id": "Invoke2UTWxhlfyqbT5FTn--5jvgbLgj+FfJwzswGk55DU1H--Y=",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunCMAModelPipelineStack--AppStage--ChaliceApp--PFunCMAModelChaliceApp--APIHandler/Invoke2UTWxhlfyqbT5FTn--5jvgbLgj+FfJwzswGk55DU1H--Y=",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                          "aws:cdk:cloudformation:props": {
                            "action": "lambda:InvokeFunction",
                            "functionName": {
                              "Fn::GetAtt": [
                                "APIHandler",
                                "Arn"
                              ]
                            },
                            "principal": "elasticloadbalancing.amazonaws.com"
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
                      "version": "2.93.0"
                    }
                  },
                  "PFunAlbDNSName": {
                    "id": "PFunAlbDNSName",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunAlbDNSName",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnOutput",
                      "version": "2.93.0"
                    }
                  },
                  "PFunDevCMAModelHttpApi": {
                    "id": "PFunDevCMAModelHttpApi",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunDevCMAModelHttpApi",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.RestApiBase",
                      "version": "2.93.0"
                    }
                  },
                  "PFunDevCMAModelHttpApiMapping": {
                    "id": "PFunDevCMAModelHttpApiMapping",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunDevCMAModelHttpApiMapping",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::ApiMapping",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Fn::GetAtt": [
                            "RestAPI",
                            "ApiId"
                          ]
                        },
                        "domainName": "dev.pfun.app",
                        "stage": "api"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigatewayv2.CfnApiMapping",
                      "version": "2.93.0"
                    }
                  },
                  "PFunDevCMAModelCustomDomainNameOutput": {
                    "id": "PFunDevCMAModelCustomDomainNameOutput",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/PFunDevCMAModelCustomDomainNameOutput",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnOutput",
                      "version": "2.93.0"
                    }
                  },
                  "CDKMetadata": {
                    "id": "CDKMetadata",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/CDKMetadata",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/CDKMetadata/Default",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.93.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.2.69"
                    }
                  },
                  "BootstrapVersion": {
                    "id": "BootstrapVersion",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/BootstrapVersion",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnParameter",
                      "version": "2.93.0"
                    }
                  },
                  "CheckBootstrapVersion": {
                    "id": "CheckBootstrapVersion",
                    "path": "PFunCMAModelPipelineStack/AppStage/ChaliceApp/CheckBootstrapVersion",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnRule",
                      "version": "2.93.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Stack",
                  "version": "2.93.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.Stage",
              "version": "2.93.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "PFunCMAModelPipelineStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "PFunCMAModelPipelineStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.93.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.69"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "PFunCMAModelPipelineStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.93.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "PFunCMAModelPipelineStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.93.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.93.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.2.69"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.93.0"
    }
  }
}