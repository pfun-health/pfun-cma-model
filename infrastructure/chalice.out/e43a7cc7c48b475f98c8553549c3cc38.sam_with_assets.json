{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Outputs": {
    "RestAPIId": {
      "Value": {
        "Ref": "RestAPI"
      }
    },
    "APIHandlerName": {
      "Value": {
        "Ref": "APIHandler"
      }
    },
    "APIHandlerArn": {
      "Value": {
        "Fn::GetAtt": [
          "APIHandler",
          "Arn"
        ]
      }
    },
    "EndpointURL": {
      "Value": {
        "Fn::Sub": "https://${RestAPI}.execute-api.${AWS::Region}.${AWS::URLSuffix}/api/"
      }
    },
    "WebsocketAPIId": {
      "Value": {
        "Ref": "WebsocketAPI"
      }
    },
    "WebsocketConnectHandlerArn": {
      "Value": {
        "Fn::GetAtt": [
          "WebsocketConnect",
          "Arn"
        ]
      }
    },
    "WebsocketConnectHandlerName": {
      "Value": {
        "Ref": "WebsocketConnect"
      }
    },
    "WebsocketMessageHandlerArn": {
      "Value": {
        "Fn::GetAtt": [
          "WebsocketMessage",
          "Arn"
        ]
      }
    },
    "WebsocketMessageHandlerName": {
      "Value": {
        "Ref": "WebsocketMessage"
      }
    },
    "WebsocketConnectEndpointURL": {
      "Value": {
        "Fn::Sub": "wss://${WebsocketAPI}.execute-api.${AWS::Region}.${AWS::URLSuffix}/api/"
      }
    }
  },
  "Resources": {
    "ManagedLayer": {
      "Type": "AWS::Serverless::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "python3.10"
        ],
        "ContentUri": {
          "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
          "Key": "0cd9b2ab28271b48194ab41add1d9853a2d3d8d7590c8c78b76ae4974d97241a.zip"
        },
        "LayerName": "pfun-cma-model-pfun-cma-model-managed-layer"
      }
    },
    "RunModel": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Runtime": "python3.10",
        "Handler": "app.run_model_with_config",
        "CodeUri": {
          "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
          "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
        },
        "Tags": {
          "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
        },
        "Tracing": "PassThrough",
        "Timeout": 60,
        "MemorySize": 128,
        "Layers": [
          {
            "Ref": "ManagedLayer"
          },
          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
        ],
        "Role": null
      }
    },
    "RunAtTime": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Runtime": "python3.10",
        "Handler": "app.run_at_time",
        "CodeUri": {
          "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
          "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
        },
        "Tags": {
          "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
        },
        "Tracing": "PassThrough",
        "Timeout": 60,
        "MemorySize": 128,
        "Layers": [
          {
            "Ref": "ManagedLayer"
          },
          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
        ],
        "Role": null
      }
    },
    "FitModel": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Runtime": "python3.10",
        "Handler": "app.fit_model_to_data",
        "CodeUri": {
          "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
          "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
        },
        "Tags": {
          "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
        },
        "Tracing": "PassThrough",
        "Timeout": 60,
        "MemorySize": 128,
        "Layers": [
          {
            "Ref": "ManagedLayer"
          },
          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
        ],
        "Role": null
      }
    },
    "Oauth2Dexcom": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Runtime": "python3.10",
        "Handler": "app.oauth2_dexcom",
        "CodeUri": {
          "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
          "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
        },
        "Tags": {
          "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
        },
        "Tracing": "PassThrough",
        "Timeout": 60,
        "MemorySize": 128,
        "Layers": [
          {
            "Ref": "ManagedLayer"
          },
          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
        ],
        "Role": null
      }
    },
    "FakeAuth": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Runtime": "python3.10",
        "Handler": "app.fake_auth",
        "CodeUri": {
          "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
          "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
        },
        "Tags": {
          "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
        },
        "Tracing": "PassThrough",
        "Timeout": 60,
        "MemorySize": 128,
        "Layers": [
          {
            "Ref": "ManagedLayer"
          },
          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
        ],
        "Role": null
      }
    },
    "RestAPI": {
      "Type": "AWS::Serverless::Api",
      "Properties": {
        "EndpointConfiguration": "EDGE",
        "StageName": "api",
        "DefinitionBody": {
          "swagger": "2.0",
          "info": {
            "version": "1.0",
            "title": "PFun CMA Model Backend"
          },
          "schemes": [
            "https"
          ],
          "paths": {
            "/sdk": {
              "get": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                },
                "security": [
                  {
                    "fake_auth": []
                  }
                ]
              },
              "options": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    },
                    "headers": {
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Expose-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Max-Age": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Credentials": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                        "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
                        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
                        "method.response.header.Access-Control-Max-Age": "'300'",
                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/": {
              "get": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              },
              "options": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    },
                    "headers": {
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Expose-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Max-Age": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Credentials": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                        "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
                        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
                        "method.response.header.Access-Control-Max-Age": "'300'",
                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/routes": {
              "get": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              },
              "options": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    },
                    "headers": {
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Expose-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Max-Age": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Credentials": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                        "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
                        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
                        "method.response.header.Access-Control-Max-Age": "'300'",
                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/log": {
              "get": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                },
                "security": [
                  {
                    "fake_auth": []
                  }
                ]
              },
              "post": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                },
                "security": [
                  {
                    "fake_auth": []
                  }
                ]
              },
              "options": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    },
                    "headers": {
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Expose-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Max-Age": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Credentials": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                        "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
                        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
                        "method.response.header.Access-Control-Max-Age": "'300'",
                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/run": {
              "get": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                },
                "summary": "A function that returns a message containing the welcome message and the",
                "description": "routes of the PFun CMA Model API.",
                "security": [
                  {
                    "fake_auth": []
                  }
                ]
              },
              "post": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                },
                "summary": "A function that returns a message containing the welcome message and the",
                "description": "routes of the PFun CMA Model API.",
                "security": [
                  {
                    "fake_auth": []
                  }
                ]
              },
              "options": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    },
                    "headers": {
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Expose-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Max-Age": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Credentials": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                        "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
                        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
                        "method.response.header.Access-Control-Max-Age": "'300'",
                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/fit": {
              "post": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                },
                "security": [
                  {
                    "fake_auth": []
                  }
                ]
              },
              "options": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    },
                    "headers": {
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Expose-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Max-Age": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Credentials": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                        "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
                        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
                        "method.response.header.Access-Control-Max-Age": "'300'",
                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/login-success": {
              "get": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              },
              "options": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    },
                    "headers": {
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Expose-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Max-Age": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Credentials": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                        "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
                        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
                        "method.response.header.Access-Control-Max-Age": "'300'",
                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/login-dexcom": {
              "get": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              },
              "options": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    },
                    "headers": {
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Expose-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Max-Age": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Credentials": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                        "method.response.header.Access-Control-Allow-Origin": "'pfun-cma-model-api.p.rapidapi.com'",
                        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-API-Key,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,X-RapidAPI-Host,X-RapidAPI-Key,X-RapidAPI-Proxy-Secret'",
                        "method.response.header.Access-Control-Expose-Headers": "'X-RapidAPI-Key,X-RapidAPI-Proxy-Secret,X-RapidAPI-Host'",
                        "method.response.header.Access-Control-Max-Age": "'300'",
                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            }
          },
          "definitions": {
            "Empty": {
              "type": "object",
              "title": "Empty Schema"
            }
          },
          "x-amazon-apigateway-binary-media-types": [
            "application/octet-stream",
            "application/x-tar",
            "application/zip",
            "audio/basic",
            "audio/ogg",
            "audio/mp4",
            "audio/mpeg",
            "audio/wav",
            "audio/webm",
            "image/png",
            "image/jpg",
            "image/jpeg",
            "image/gif",
            "video/ogg",
            "video/mpeg",
            "video/webm"
          ],
          "securityDefinitions": {
            "fake_auth": {
              "in": "header",
              "type": "apiKey",
              "name": "Authorization",
              "x-amazon-apigateway-authtype": "custom",
              "x-amazon-apigateway-authorizer": {
                "type": "token",
                "authorizerUri": {
                  "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FakeAuth.Arn}/invocations"
                }
              }
            }
          }
        }
      }
    },
    "APIHandler": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Runtime": "python3.10",
        "Handler": "app.app",
        "CodeUri": {
          "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
          "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
        },
        "Tags": {
          "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
        },
        "Tracing": "PassThrough",
        "Timeout": 60,
        "MemorySize": 128,
        "Layers": [
          {
            "Ref": "ManagedLayer"
          },
          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
        ],
        "Role": null
      }
    },
    "APIHandlerInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "APIHandler"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*",
            {
              "RestAPIId": {
                "Ref": "RestAPI"
              }
            }
          ]
        }
      }
    },
    "FakeAuthInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "FakeAuth",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*",
            {
              "RestAPIId": {
                "Ref": "RestAPI"
              }
            }
          ]
        }
      }
    },
    "WebsocketConnect": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Runtime": "python3.10",
        "Handler": "app.run_at_time_connect",
        "CodeUri": {
          "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
          "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
        },
        "Tags": {
          "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
        },
        "Tracing": "PassThrough",
        "Timeout": 60,
        "MemorySize": 128,
        "Layers": [
          {
            "Ref": "ManagedLayer"
          },
          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
        ],
        "Role": null
      }
    },
    "WebsocketMessage": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Runtime": "python3.10",
        "Handler": "app.run_at_time_route",
        "CodeUri": {
          "Bucket": "cdk-hnb659fds-assets-860311922912-us-east-1",
          "Key": "ebc37592e593b39d950c75a2e2c40155650110ce3a28fcb03c7e37ae56415b9e.zip"
        },
        "Tags": {
          "aws-chalice": "version=1.29.0:stage=pfun-cma-model:app=pfun-cma-model"
        },
        "Tracing": "PassThrough",
        "Timeout": 60,
        "MemorySize": 128,
        "Layers": [
          {
            "Ref": "ManagedLayer"
          },
          "arn:aws:lambda:us-east-1:860311922912:layer:pfun-cma-model-deps-dev-managed-layer:14"
        ],
        "Role": null
      }
    },
    "WebsocketAPI": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "pfun-cma-model-pfun-cma-model-websocket-api",
        "RouteSelectionExpression": "$request.body.action",
        "ProtocolType": "WEBSOCKET"
      }
    },
    "WebsocketConnectAPIIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketAPI"
        },
        "ConnectionType": "INTERNET",
        "ContentHandlingStrategy": "CONVERT_TO_TEXT",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${WebsocketHandler}/invocations",
            {
              "WebsocketHandler": {
                "Ref": "WebsocketConnect"
              }
            }
          ]
        }
      }
    },
    "WebsocketConnectInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "WebsocketConnect"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketAPIId}/*",
            {
              "WebsocketAPIId": {
                "Ref": "WebsocketAPI"
              }
            }
          ]
        }
      }
    },
    "WebsocketMessageAPIIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketAPI"
        },
        "ConnectionType": "INTERNET",
        "ContentHandlingStrategy": "CONVERT_TO_TEXT",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${WebsocketHandler}/invocations",
            {
              "WebsocketHandler": {
                "Ref": "WebsocketMessage"
              }
            }
          ]
        }
      }
    },
    "WebsocketMessageInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "WebsocketMessage"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketAPIId}/*",
            {
              "WebsocketAPIId": {
                "Ref": "WebsocketAPI"
              }
            }
          ]
        }
      }
    },
    "WebsocketConnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketAPI"
        },
        "RouteKey": "$connect",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "WebsocketConnectAPIIntegration"
              }
            ]
          ]
        }
      }
    },
    "WebsocketMessageRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketAPI"
        },
        "RouteKey": "$default",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "WebsocketMessageAPIIntegration"
              }
            ]
          ]
        }
      }
    },
    "WebsocketAPIDeployment": {
      "Type": "AWS::ApiGatewayV2::Deployment",
      "DependsOn": [
        "WebsocketConnectRoute",
        "WebsocketMessageRoute"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketAPI"
        }
      }
    },
    "WebsocketAPIStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketAPI"
        },
        "DeploymentId": {
          "Ref": "WebsocketAPIDeployment"
        },
        "StageName": "api"
      }
    }
  }
}