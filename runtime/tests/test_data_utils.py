
# Generated by CodiumAI
from pathlib import Path
import sys
import pandas as pd
root_path = str(Path(__file__).parents[2])
mod_path = str(Path(__file__).parents[1])
if root_path not in sys.path:
    sys.path.insert(0, root_path)
if mod_path not in sys.path:
    sys.path.insert(0, mod_path)

from chalicelib.engine.data_utils import format_data


import pytest

class TestFormatData:
    # Tests that the function 'format_data' works correctly when given a pandas DataFrame with all required columns
    def test_input_dataframe_with_all_required_columns(self):
        # Create a sample input DataFrame
        input_df = pd.DataFrame({
            'systemTime': ['2022-01-01T00:00:00.000Z', '2022-01-01T00:30:00.000Z', '2022-01-01T01:00:00.000Z'],
            'displayTime': ['2022-01-01T00:00:00.000Z', '2022-01-01T00:30:00.000Z', '2022-01-01T01:00:00.000Z'],
            'value': [100, 110, 120],
            'sg': [100, 110, 120],
            'ts_utc': ['2022-01-01T00:00:00.000Z', '2022-01-01T00:30:00.000Z', '2022-01-01T01:00:00.000Z'],
            'ts_local': ['2022-01-01T00:00:00.000Z', '2022-01-01T00:30:00.000Z', '2022-01-01T01:00:00.000Z']
        })
        # Call the function
        output_df = format_data(input_df)
        # Check that the output is a pandas DataFrame
        assert isinstance(output_df, pd.DataFrame)
        # Check that the output has the expected columns
        assert set(output_df.columns) == {'time', 'value', 'tod', 't', 'G'}
        # Check that the output has the expected number of rows
        assert len(output_df) == 3
        # Check that the output has the expected values
        assert output_df['value'].tolist() == [100.0, 110.0, 120.0]
        pytest.approx(output_df['G'].tolist()) == [1.003136, 1.062011, 1.215261]

