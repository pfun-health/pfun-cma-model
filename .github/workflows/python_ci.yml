name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
   
  build:
    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
        PKG_DIRS: ./runtime
        ROOT_DIR: ./pfun_cma_model

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry && pip install --upgrade -r requirements.txt

    - name: Build package
      run: poetry build

    - name: Run tests
      run: |
        cd ${PKG_DIRS} && poetry run pytest

    - name: Lint code
      run: |
        poetry run flake8

    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage/

  test-local:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry && pip install --upgrade -r requirements.txt
    - name: Run chalice locally, test endpoints.
      run: |
        cd ${PKG_DIRS}
        make local ROOT_DIR=${ROOT_DIR} &> /dev/null &
        sleep 3s
        make test-local ROOT_DIR=${ROOT_DIR}
        pkill chalice
        sleep 1s
  
  deploy-dev:
    needs: test-local
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry && pip install --upgrade -r requirements.txt
        poetry install
    - name: Deploy dev stage
      run: |
        cd ${PKG_DIRS}
        make deploy ROOT_DIR=${ROOT_DIR} STAGE=dev